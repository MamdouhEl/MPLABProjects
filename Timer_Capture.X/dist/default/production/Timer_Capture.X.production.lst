

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Oct 23 01:44:39 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.20
    15                           ; Generated 12/02/2020 GMT
    16                           ; 
    17                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0094                     	;# 
    96  0098                     	;# 
    97  0099                     	;# 
    98  009C                     	;# 
    99  009D                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  010C                     	;# 
   103  010D                     	;# 
   104  010E                     	;# 
   105  010F                     	;# 
   106  018C                     	;# 
   107  018D                     	;# 
   108  0000                     	;# 
   109  0001                     	;# 
   110  0002                     	;# 
   111  0003                     	;# 
   112  0004                     	;# 
   113  0005                     	;# 
   114  0006                     	;# 
   115  0007                     	;# 
   116  0008                     	;# 
   117  0009                     	;# 
   118  000A                     	;# 
   119  000B                     	;# 
   120  000C                     	;# 
   121  000D                     	;# 
   122  000E                     	;# 
   123  000E                     	;# 
   124  000F                     	;# 
   125  0010                     	;# 
   126  0011                     	;# 
   127  0012                     	;# 
   128  0013                     	;# 
   129  0014                     	;# 
   130  0015                     	;# 
   131  0015                     	;# 
   132  0016                     	;# 
   133  0017                     	;# 
   134  0018                     	;# 
   135  0019                     	;# 
   136  001A                     	;# 
   137  001B                     	;# 
   138  001B                     	;# 
   139  001C                     	;# 
   140  001D                     	;# 
   141  001E                     	;# 
   142  001F                     	;# 
   143  0081                     	;# 
   144  0085                     	;# 
   145  0086                     	;# 
   146  0087                     	;# 
   147  0088                     	;# 
   148  0089                     	;# 
   149  008C                     	;# 
   150  008D                     	;# 
   151  008E                     	;# 
   152  0091                     	;# 
   153  0092                     	;# 
   154  0093                     	;# 
   155  0094                     	;# 
   156  0098                     	;# 
   157  0099                     	;# 
   158  009C                     	;# 
   159  009D                     	;# 
   160  009E                     	;# 
   161  009F                     	;# 
   162  010C                     	;# 
   163  010D                     	;# 
   164  010E                     	;# 
   165  010F                     	;# 
   166  018C                     	;# 
   167  018D                     	;# 
   168  0000                     	;# 
   169  0001                     	;# 
   170  0002                     	;# 
   171  0003                     	;# 
   172  0004                     	;# 
   173  0005                     	;# 
   174  0006                     	;# 
   175  0007                     	;# 
   176  0008                     	;# 
   177  0009                     	;# 
   178  000A                     	;# 
   179  000B                     	;# 
   180  000C                     	;# 
   181  000D                     	;# 
   182  000E                     	;# 
   183  000E                     	;# 
   184  000F                     	;# 
   185  0010                     	;# 
   186  0011                     	;# 
   187  0012                     	;# 
   188  0013                     	;# 
   189  0014                     	;# 
   190  0015                     	;# 
   191  0015                     	;# 
   192  0016                     	;# 
   193  0017                     	;# 
   194  0018                     	;# 
   195  0019                     	;# 
   196  001A                     	;# 
   197  001B                     	;# 
   198  001B                     	;# 
   199  001C                     	;# 
   200  001D                     	;# 
   201  001E                     	;# 
   202  001F                     	;# 
   203  0081                     	;# 
   204  0085                     	;# 
   205  0086                     	;# 
   206  0087                     	;# 
   207  0088                     	;# 
   208  0089                     	;# 
   209  008C                     	;# 
   210  008D                     	;# 
   211  008E                     	;# 
   212  0091                     	;# 
   213  0092                     	;# 
   214  0093                     	;# 
   215  0094                     	;# 
   216  0098                     	;# 
   217  0099                     	;# 
   218  009C                     	;# 
   219  009D                     	;# 
   220  009E                     	;# 
   221  009F                     	;# 
   222  010C                     	;# 
   223  010D                     	;# 
   224  010E                     	;# 
   225  010F                     	;# 
   226  018C                     	;# 
   227  018D                     	;# 
   228  0043                     _RD3	set	67
   229  0042                     _RD2	set	66
   230  0041                     _RD1	set	65
   231  0047                     _RD7	set	71
   232  0046                     _RD6	set	70
   233  0045                     _RD5	set	69
   234  0044                     _RD4	set	68
   235  0040                     _RD0	set	64
   236  0088                     _TRISD	set	136
   237                           
   238                           	psect	cinit
   239  07EE                     start_initialization:	
   240                           ; #config settings
   241                           
   242  07EE                     __initialization:
   243                           
   244                           ; Clear objects allocated to BANK0
   245  07EE  1283               	bcf	3,5	;RP0=0, select bank0
   246  07EF  1303               	bcf	3,6	;RP1=0, select bank0
   247  07F0  01A0               	clrf	__pbssBANK0& (0+127)
   248  07F1  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   249  07F2  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   250  07F3  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   251  07F4  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   252  07F5  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   253  07F6  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   254  07F7  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   255  07F8  01A8               	clrf	(__pbssBANK0+8)& (0+127)
   256  07F9  01A9               	clrf	(__pbssBANK0+9)& (0+127)
   257  07FA  01AA               	clrf	(__pbssBANK0+10)& (0+127)
   258  07FB  01AB               	clrf	(__pbssBANK0+11)& (0+127)
   259  07FC                     end_of_initialization:	
   260                           ;End of C runtime variable initialization code
   261                           
   262  07FC                     __end_of__initialization:
   263  07FC  0183               	clrf	3
   264  07FD  120A  118A  2EA8   	ljmp	_main	;jump to C main() function
   265                           
   266                           	psect	bssBANK0
   267  0020                     __pbssBANK0:
   268  0020                     _T2:
   269  0020                     	ds	4
   270  0024                     _T1:
   271  0024                     	ds	4
   272  0028                     _capture:
   273  0028                     	ds	2
   274  002A                     _count:
   275  002A                     	ds	2
   276                           
   277                           	psect	cstackCOMMON
   278  0070                     __pcstackCOMMON:
   279  0070                     ?_initLCD:
   280  0070                     ?_main:	
   281                           ; 1 bytes @ 0x0
   282                           
   283  0070                     ?_delay:	
   284                           ; 1 bytes @ 0x0
   285                           
   286  0070                     delay@N:	
   287                           ; 1 bytes @ 0x0
   288                           
   289                           
   290                           ; 2 bytes @ 0x0
   291  0070                     	ds	2
   292  0072                     ??_delay:
   293                           
   294                           ; 1 bytes @ 0x2
   295  0072                     	ds	2
   296  0074                     delay@i:
   297                           
   298                           ; 2 bytes @ 0x4
   299  0074                     	ds	2
   300  0076                     ??_initLCD:
   301  0076                     ?_WriteNumber:	
   302                           ; 1 bytes @ 0x6
   303                           
   304  0076                     WriteNumber@number:	
   305                           ; 1 bytes @ 0x6
   306                           
   307                           
   308                           ; 2 bytes @ 0x6
   309  0076                     	ds	2
   310  0078                     ??_WriteNumber:
   311                           
   312                           ; 1 bytes @ 0x8
   313  0078                     	ds	2
   314  007A                     WriteNumber@SBit:
   315                           
   316                           ; 2 bytes @ 0xA
   317  007A                     	ds	2
   318  007C                     WriteNumber@i:
   319                           
   320                           ; 2 bytes @ 0xC
   321  007C                     	ds	2
   322  007E                     ??_main:
   323                           
   324                           	psect	maintext
   325  06A8                     __pmaintext:	
   326                           ; 1 bytes @ 0xE
   327 ;;
   328 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   329 ;;
   330 ;; *************** function _main *****************
   331 ;; Defined at:
   332 ;;		line 77 in file "newmain.c"
   333 ;; Parameters:    Size  Location     Type
   334 ;;		None
   335 ;; Auto vars:     Size  Location     Type
   336 ;;		None
   337 ;; Return value:  Size  Location     Type
   338 ;;                  1    wreg      void 
   339 ;; Registers used:
   340 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   341 ;; Tracked objects:
   342 ;;		On entry : B00/0
   343 ;;		On exit  : 0/0
   344 ;;		Unchanged: 0/0
   345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   346 ;;      Params:         0       0       0       0       0
   347 ;;      Locals:         0       0       0       0       0
   348 ;;      Temps:          0       0       0       0       0
   349 ;;      Totals:         0       0       0       0       0
   350 ;;Total ram usage:        0 bytes
   351 ;; Hardware stack levels required when called: 2
   352 ;; This function calls:
   353 ;;		_WriteNumber
   354 ;;		_initLCD
   355 ;; This function is called by:
   356 ;;		Startup code after reset
   357 ;; This function uses a non-reentrant model
   358 ;;
   359                           
   360                           
   361                           ;psect for function _main
   362  06A8                     _main:
   363  06A8                     l862:	
   364                           ;incstack = 0
   365                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   366                           
   367                           
   368                           ;newmain.c: 78:     initLCD();
   369  06A8  120A  118A  26D9  120A  118A  	fcall	_initLCD
   370  06AD                     l864:
   371                           
   372                           ;newmain.c: 79:     WriteNumber(0);
   373  06AD  3000               	movlw	0
   374  06AE  00F6               	movwf	WriteNumber@number
   375  06AF  00F7               	movwf	WriteNumber@number+1
   376  06B0  120A  118A  275B  120A  118A  	fcall	_WriteNumber
   377  06B5                     l17:
   378  06B5  120A  118A  2800   	ljmp	start
   379  06B8                     __end_of_main:
   380                           
   381                           	psect	text1
   382  06D9                     __ptext1:	
   383 ;; *************** function _initLCD *****************
   384 ;; Defined at:
   385 ;;		line 13 in file "LCD.c"
   386 ;; Parameters:    Size  Location     Type
   387 ;;		None
   388 ;; Auto vars:     Size  Location     Type
   389 ;;		None
   390 ;; Return value:  Size  Location     Type
   391 ;;                  1    wreg      void 
   392 ;; Registers used:
   393 ;;		wreg, status,2, status,0, pclath, cstack
   394 ;; Tracked objects:
   395 ;;		On entry : 0/0
   396 ;;		On exit  : 0/0
   397 ;;		Unchanged: 0/0
   398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   399 ;;      Params:         0       0       0       0       0
   400 ;;      Locals:         0       0       0       0       0
   401 ;;      Temps:          0       0       0       0       0
   402 ;;      Totals:         0       0       0       0       0
   403 ;;Total ram usage:        0 bytes
   404 ;; Hardware stack levels used: 1
   405 ;; Hardware stack levels required when called: 1
   406 ;; This function calls:
   407 ;;		_delay
   408 ;; This function is called by:
   409 ;;		_main
   410 ;; This function uses a non-reentrant model
   411 ;;
   412                           
   413                           
   414                           ;psect for function _initLCD
   415  06D9                     _initLCD:
   416  06D9                     l760:	
   417                           ;incstack = 0
   418                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
   419                           
   420                           
   421                           ;LCD.c: 15:     TRISD = 0x00;
   422  06D9  1683               	bsf	3,5	;RP0=1, select bank1
   423  06DA  1303               	bcf	3,6	;RP1=0, select bank1
   424  06DB  0188               	clrf	8	;volatile
   425  06DC                     l762:
   426                           
   427                           ;LCD.c: 16:     RD0 = 0;
   428  06DC  1283               	bcf	3,5	;RP0=0, select bank0
   429  06DD  1303               	bcf	3,6	;RP1=0, select bank0
   430  06DE  1008               	bcf	8,0	;volatile
   431  06DF                     l764:
   432                           
   433                           ;LCD.c: 18:     delay(50);
   434  06DF  3032               	movlw	50
   435  06E0  00F0               	movwf	delay@N
   436  06E1  3000               	movlw	0
   437  06E2  00F1               	movwf	delay@N+1
   438  06E3  120A  118A  26B8  120A  118A  	fcall	_delay
   439  06E8                     l766:
   440                           
   441                           ;LCD.c: 20:     RD4 = 0;
   442  06E8  1283               	bcf	3,5	;RP0=0, select bank0
   443  06E9  1303               	bcf	3,6	;RP1=0, select bank0
   444  06EA  1208               	bcf	8,4	;volatile
   445  06EB                     l768:
   446                           
   447                           ;LCD.c: 21:     RD5 = 1;
   448  06EB  1688               	bsf	8,5	;volatile
   449  06EC                     l770:
   450                           
   451                           ;LCD.c: 22:     RD6 = 0;
   452  06EC  1308               	bcf	8,6	;volatile
   453  06ED                     l772:
   454                           
   455                           ;LCD.c: 23:     RD7 = 0;
   456  06ED  1388               	bcf	8,7	;volatile
   457  06EE                     l774:
   458                           
   459                           ;LCD.c: 25:     delay(50);
   460  06EE  3032               	movlw	50
   461  06EF  00F0               	movwf	delay@N
   462  06F0  3000               	movlw	0
   463  06F1  00F1               	movwf	delay@N+1
   464  06F2  120A  118A  26B8  120A  118A  	fcall	_delay
   465  06F7                     l776:
   466                           
   467                           ;LCD.c: 26:     RD1 = 1;
   468  06F7  1283               	bcf	3,5	;RP0=0, select bank0
   469  06F8  1303               	bcf	3,6	;RP1=0, select bank0
   470  06F9  1488               	bsf	8,1	;volatile
   471  06FA                     l778:
   472                           
   473                           ;LCD.c: 27:     delay(100);
   474  06FA  3064               	movlw	100
   475  06FB  00F0               	movwf	delay@N
   476  06FC  3000               	movlw	0
   477  06FD  00F1               	movwf	delay@N+1
   478  06FE  120A  118A  26B8  120A  118A  	fcall	_delay
   479  0703                     l780:
   480                           
   481                           ;LCD.c: 28:     RD1 = 0;
   482  0703  1283               	bcf	3,5	;RP0=0, select bank0
   483  0704  1303               	bcf	3,6	;RP1=0, select bank0
   484  0705  1088               	bcf	8,1	;volatile
   485  0706                     l782:
   486                           
   487                           ;LCD.c: 29:     delay(100);
   488  0706  3064               	movlw	100
   489  0707  00F0               	movwf	delay@N
   490  0708  3000               	movlw	0
   491  0709  00F1               	movwf	delay@N+1
   492  070A  120A  118A  26B8  120A  118A  	fcall	_delay
   493  070F                     l784:
   494                           
   495                           ;LCD.c: 32:     RD4 = 0;
   496  070F  1283               	bcf	3,5	;RP0=0, select bank0
   497  0710  1303               	bcf	3,6	;RP1=0, select bank0
   498  0711  1208               	bcf	8,4	;volatile
   499  0712                     l786:
   500                           
   501                           ;LCD.c: 33:     delay(50);
   502  0712  3032               	movlw	50
   503  0713  00F0               	movwf	delay@N
   504  0714  3000               	movlw	0
   505  0715  00F1               	movwf	delay@N+1
   506  0716  120A  118A  26B8  120A  118A  	fcall	_delay
   507  071B                     l788:
   508                           
   509                           ;LCD.c: 34:     RD1 = 1;
   510  071B  1283               	bcf	3,5	;RP0=0, select bank0
   511  071C  1303               	bcf	3,6	;RP1=0, select bank0
   512  071D  1488               	bsf	8,1	;volatile
   513  071E                     l790:
   514                           
   515                           ;LCD.c: 35:     delay(50);
   516  071E  3032               	movlw	50
   517  071F  00F0               	movwf	delay@N
   518  0720  3000               	movlw	0
   519  0721  00F1               	movwf	delay@N+1
   520  0722  120A  118A  26B8  120A  118A  	fcall	_delay
   521  0727                     l792:
   522                           
   523                           ;LCD.c: 36:     RD1 = 0;
   524  0727  1283               	bcf	3,5	;RP0=0, select bank0
   525  0728  1303               	bcf	3,6	;RP1=0, select bank0
   526  0729  1088               	bcf	8,1	;volatile
   527  072A                     l794:
   528                           
   529                           ;LCD.c: 37:     delay(50);
   530  072A  3032               	movlw	50
   531  072B  00F0               	movwf	delay@N
   532  072C  3000               	movlw	0
   533  072D  00F1               	movwf	delay@N+1
   534  072E  120A  118A  26B8  120A  118A  	fcall	_delay
   535  0733                     l796:
   536                           
   537                           ;LCD.c: 38:     RD4 = 1;
   538  0733  1283               	bcf	3,5	;RP0=0, select bank0
   539  0734  1303               	bcf	3,6	;RP1=0, select bank0
   540  0735  1608               	bsf	8,4	;volatile
   541  0736                     l798:
   542                           
   543                           ;LCD.c: 39:     RD5 = 1;
   544  0736  1688               	bsf	8,5	;volatile
   545  0737                     l800:
   546                           
   547                           ;LCD.c: 40:     RD6 = 1;
   548  0737  1708               	bsf	8,6	;volatile
   549  0738                     l802:
   550                           
   551                           ;LCD.c: 41:     RD7 = 1;
   552  0738  1788               	bsf	8,7	;volatile
   553  0739                     l804:
   554                           
   555                           ;LCD.c: 42:     delay(50);
   556  0739  3032               	movlw	50
   557  073A  00F0               	movwf	delay@N
   558  073B  3000               	movlw	0
   559  073C  00F1               	movwf	delay@N+1
   560  073D  120A  118A  26B8  120A  118A  	fcall	_delay
   561  0742                     l806:
   562                           
   563                           ;LCD.c: 43:     RD1 = 1;
   564  0742  1283               	bcf	3,5	;RP0=0, select bank0
   565  0743  1303               	bcf	3,6	;RP1=0, select bank0
   566  0744  1488               	bsf	8,1	;volatile
   567  0745                     l808:
   568                           
   569                           ;LCD.c: 44:     delay(50);
   570  0745  3032               	movlw	50
   571  0746  00F0               	movwf	delay@N
   572  0747  3000               	movlw	0
   573  0748  00F1               	movwf	delay@N+1
   574  0749  120A  118A  26B8  120A  118A  	fcall	_delay
   575  074E                     l810:
   576                           
   577                           ;LCD.c: 45:     RD1 = 0;
   578  074E  1283               	bcf	3,5	;RP0=0, select bank0
   579  074F  1303               	bcf	3,6	;RP1=0, select bank0
   580  0750  1088               	bcf	8,1	;volatile
   581  0751                     l812:
   582                           
   583                           ;LCD.c: 46:     delay(50);
   584  0751  3032               	movlw	50
   585  0752  00F0               	movwf	delay@N
   586  0753  3000               	movlw	0
   587  0754  00F1               	movwf	delay@N+1
   588  0755  120A  118A  26B8  120A  118A  	fcall	_delay
   589  075A                     l46:
   590  075A  0008               	return
   591  075B                     __end_of_initLCD:
   592                           
   593                           	psect	text2
   594  075B                     __ptext2:	
   595 ;; *************** function _WriteNumber *****************
   596 ;; Defined at:
   597 ;;		line 49 in file "LCD.c"
   598 ;; Parameters:    Size  Location     Type
   599 ;;  number          2    6[COMMON] int 
   600 ;; Auto vars:     Size  Location     Type
   601 ;;  i               2   12[COMMON] int 
   602 ;;  SBit            2   10[COMMON] int 
   603 ;; Return value:  Size  Location     Type
   604 ;;                  1    wreg      void 
   605 ;; Registers used:
   606 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   607 ;; Tracked objects:
   608 ;;		On entry : 0/0
   609 ;;		On exit  : 0/0
   610 ;;		Unchanged: 0/0
   611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   612 ;;      Params:         2       0       0       0       0
   613 ;;      Locals:         4       0       0       0       0
   614 ;;      Temps:          2       0       0       0       0
   615 ;;      Totals:         8       0       0       0       0
   616 ;;Total ram usage:        8 bytes
   617 ;; Hardware stack levels used: 1
   618 ;; Hardware stack levels required when called: 1
   619 ;; This function calls:
   620 ;;		_delay
   621 ;; This function is called by:
   622 ;;		_main
   623 ;; This function uses a non-reentrant model
   624 ;;
   625                           
   626                           
   627                           ;psect for function _WriteNumber
   628  075B                     _WriteNumber:
   629  075B                     l814:	
   630                           ;incstack = 0
   631                           ; Regs used in _WriteNumber: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   632                           
   633  075B                     l816:
   634                           
   635                           ;LCD.c: 51:     RD0 = 1;
   636  075B  1283               	bcf	3,5	;RP0=0, select bank0
   637  075C  1303               	bcf	3,6	;RP1=0, select bank0
   638  075D  1408               	bsf	8,0	;volatile
   639                           
   640                           ;LCD.c: 52:     int i;;LCD.c: 53:     for(i = 0; i < 2; i++){
   641  075E  01FC               	clrf	WriteNumber@i
   642  075F  01FD               	clrf	WriteNumber@i+1
   643  0760                     l822:
   644                           
   645                           ;LCD.c: 54:         if(i == 0){
   646  0760  087C               	movf	WriteNumber@i,w
   647  0761  047D               	iorwf	WriteNumber@i+1,w
   648  0762  1D03               	btfss	3,2
   649  0763  2F65               	goto	u71
   650  0764  2F66               	goto	u70
   651  0765                     u71:
   652  0765  2F78               	goto	l826
   653  0766                     u70:
   654  0766                     l824:
   655                           
   656                           ;LCD.c: 55:             SBit = (number & 0xF0) >> 4;
   657  0766  0877               	movf	WriteNumber@number+1,w
   658  0767  00F9               	movwf	??_WriteNumber+1
   659  0768  0876               	movf	WriteNumber@number,w
   660  0769  00F8               	movwf	??_WriteNumber
   661  076A  3004               	movlw	4
   662  076B  00FF               	movwf	btemp+1
   663  076C                     u85:
   664  076C  0D79               	rlf	??_WriteNumber+1,w
   665  076D  0CF9               	rrf	??_WriteNumber+1,f
   666  076E  0CF8               	rrf	??_WriteNumber,f
   667  076F  0BFF               	decfsz	btemp+1,f
   668  0770  2F6C               	goto	u85
   669  0771  300F               	movlw	15
   670  0772  0578               	andwf	??_WriteNumber,w
   671  0773  00FA               	movwf	WriteNumber@SBit
   672  0774  3000               	movlw	0
   673  0775  0579               	andwf	??_WriteNumber+1,w
   674  0776  00FB               	movwf	WriteNumber@SBit+1
   675                           
   676                           ;LCD.c: 56:         }else{
   677  0777  2F7E               	goto	l828
   678  0778                     l826:
   679                           
   680                           ;LCD.c: 57:             SBit = (number & 0x0F);
   681  0778  300F               	movlw	15
   682  0779  0576               	andwf	WriteNumber@number,w
   683  077A  00FA               	movwf	WriteNumber@SBit
   684  077B  3000               	movlw	0
   685  077C  0577               	andwf	WriteNumber@number+1,w
   686  077D  00FB               	movwf	WriteNumber@SBit+1
   687  077E                     l828:
   688                           
   689                           ;LCD.c: 61:         if(SBit == 0){
   690  077E  087A               	movf	WriteNumber@SBit,w
   691  077F  047B               	iorwf	WriteNumber@SBit+1,w
   692  0780  1D03               	btfss	3,2
   693  0781  2F83               	goto	u91
   694  0782  2F84               	goto	u90
   695  0783                     u91:
   696  0783  2FDA               	goto	l858
   697  0784                     u90:
   698  0784                     l830:
   699                           
   700                           ;LCD.c: 63:             RD0 = 1;
   701  0784  1283               	bcf	3,5	;RP0=0, select bank0
   702  0785  1303               	bcf	3,6	;RP1=0, select bank0
   703  0786  1408               	bsf	8,0	;volatile
   704                           
   705                           ;LCD.c: 64:             RD1 = 0;
   706  0787  1088               	bcf	8,1	;volatile
   707                           
   708                           ;LCD.c: 65:             RD2 = 0;
   709  0788  1108               	bcf	8,2	;volatile
   710                           
   711                           ;LCD.c: 66:             RD3 = 0;
   712  0789  1188               	bcf	8,3	;volatile
   713                           
   714                           ;LCD.c: 67:             RD4 = 1;
   715  078A  1608               	bsf	8,4	;volatile
   716                           
   717                           ;LCD.c: 68:             RD5 = 1;
   718  078B  1688               	bsf	8,5	;volatile
   719                           
   720                           ;LCD.c: 69:             RD6 = 0;
   721  078C  1308               	bcf	8,6	;volatile
   722                           
   723                           ;LCD.c: 70:             RD7 = 0;
   724  078D  1388               	bcf	8,7	;volatile
   725  078E                     l832:
   726                           
   727                           ;LCD.c: 71:             delay(50);
   728  078E  3032               	movlw	50
   729  078F  00F0               	movwf	delay@N
   730  0790  3000               	movlw	0
   731  0791  00F1               	movwf	delay@N+1
   732  0792  120A  118A  26B8  120A  118A  	fcall	_delay
   733  0797                     l834:
   734                           
   735                           ;LCD.c: 72:             RD1 = 1;
   736  0797  1283               	bcf	3,5	;RP0=0, select bank0
   737  0798  1303               	bcf	3,6	;RP1=0, select bank0
   738  0799  1488               	bsf	8,1	;volatile
   739                           
   740                           ;LCD.c: 73:             delay(50);
   741  079A  3032               	movlw	50
   742  079B  00F0               	movwf	delay@N
   743  079C  3000               	movlw	0
   744  079D  00F1               	movwf	delay@N+1
   745  079E  120A  118A  26B8  120A  118A  	fcall	_delay
   746  07A3                     l836:
   747                           
   748                           ;LCD.c: 74:             RD1 = 0;
   749  07A3  1283               	bcf	3,5	;RP0=0, select bank0
   750  07A4  1303               	bcf	3,6	;RP1=0, select bank0
   751  07A5  1088               	bcf	8,1	;volatile
   752                           
   753                           ;LCD.c: 75:             delay(50);
   754  07A6  3032               	movlw	50
   755  07A7  00F0               	movwf	delay@N
   756  07A8  3000               	movlw	0
   757  07A9  00F1               	movwf	delay@N+1
   758  07AA  120A  118A  26B8  120A  118A  	fcall	_delay
   759  07AF                     l838:
   760                           
   761                           ;LCD.c: 76:             RD0 = 1;
   762  07AF  1283               	bcf	3,5	;RP0=0, select bank0
   763  07B0  1303               	bcf	3,6	;RP1=0, select bank0
   764  07B1  1408               	bsf	8,0	;volatile
   765  07B2                     l840:
   766                           
   767                           ;LCD.c: 77:             RD1 = 0;
   768  07B2  1088               	bcf	8,1	;volatile
   769  07B3                     l842:
   770                           
   771                           ;LCD.c: 78:             RD2 = 0;
   772  07B3  1108               	bcf	8,2	;volatile
   773  07B4                     l844:
   774                           
   775                           ;LCD.c: 79:             RD3 = 0;
   776  07B4  1188               	bcf	8,3	;volatile
   777  07B5                     l846:
   778                           
   779                           ;LCD.c: 80:             RD4 = 0;
   780  07B5  1208               	bcf	8,4	;volatile
   781  07B6                     l848:
   782                           
   783                           ;LCD.c: 81:             RD5 = 0;
   784  07B6  1288               	bcf	8,5	;volatile
   785  07B7                     l850:
   786                           
   787                           ;LCD.c: 82:             RD6 = 0;
   788  07B7  1308               	bcf	8,6	;volatile
   789  07B8                     l852:
   790                           
   791                           ;LCD.c: 83:             RD7 = 0;
   792  07B8  1388               	bcf	8,7	;volatile
   793                           
   794                           ;LCD.c: 84:             delay(50);
   795  07B9  3032               	movlw	50
   796  07BA  00F0               	movwf	delay@N
   797  07BB  3000               	movlw	0
   798  07BC  00F1               	movwf	delay@N+1
   799  07BD  120A  118A  26B8  120A  118A  	fcall	_delay
   800  07C2                     l854:
   801                           
   802                           ;LCD.c: 85:             RD1 = 1;
   803  07C2  1283               	bcf	3,5	;RP0=0, select bank0
   804  07C3  1303               	bcf	3,6	;RP1=0, select bank0
   805  07C4  1488               	bsf	8,1	;volatile
   806                           
   807                           ;LCD.c: 86:             delay(50);
   808  07C5  3032               	movlw	50
   809  07C6  00F0               	movwf	delay@N
   810  07C7  3000               	movlw	0
   811  07C8  00F1               	movwf	delay@N+1
   812  07C9  120A  118A  26B8  120A  118A  	fcall	_delay
   813  07CE                     l856:
   814                           
   815                           ;LCD.c: 87:             RD1 = 0;
   816  07CE  1283               	bcf	3,5	;RP0=0, select bank0
   817  07CF  1303               	bcf	3,6	;RP1=0, select bank0
   818  07D0  1088               	bcf	8,1	;volatile
   819                           
   820                           ;LCD.c: 88:             delay(50);
   821  07D1  3032               	movlw	50
   822  07D2  00F0               	movwf	delay@N
   823  07D3  3000               	movlw	0
   824  07D4  00F1               	movwf	delay@N+1
   825  07D5  120A  118A  26B8  120A  118A  	fcall	_delay
   826  07DA                     l858:
   827                           
   828                           ;LCD.c: 315:     }
   829  07DA  3001               	movlw	1
   830  07DB  07FC               	addwf	WriteNumber@i,f
   831  07DC  1803               	skipnc
   832  07DD  0AFD               	incf	WriteNumber@i+1,f
   833  07DE  3000               	movlw	0
   834  07DF  07FD               	addwf	WriteNumber@i+1,f
   835  07E0                     l860:
   836  07E0  087D               	movf	WriteNumber@i+1,w
   837  07E1  3A80               	xorlw	128
   838  07E2  00FF               	movwf	btemp+1
   839  07E3  3080               	movlw	128
   840  07E4  027F               	subwf	btemp+1,w
   841  07E5  1D03               	skipz
   842  07E6  2FE9               	goto	u105
   843  07E7  3002               	movlw	2
   844  07E8  027C               	subwf	WriteNumber@i,w
   845  07E9                     u105:
   846  07E9  1C03               	skipc
   847  07EA  2FEC               	goto	u101
   848  07EB  2FED               	goto	u100
   849  07EC                     u101:
   850  07EC  2F60               	goto	l822
   851  07ED                     u100:
   852  07ED                     l54:
   853  07ED  0008               	return
   854  07EE                     __end_of_WriteNumber:
   855                           
   856                           	psect	text3
   857  06B8                     __ptext3:	
   858 ;; *************** function _delay *****************
   859 ;; Defined at:
   860 ;;		line 7 in file "LCD.c"
   861 ;; Parameters:    Size  Location     Type
   862 ;;  N               2    0[COMMON] int 
   863 ;; Auto vars:     Size  Location     Type
   864 ;;  i               2    4[COMMON] int 
   865 ;; Return value:  Size  Location     Type
   866 ;;                  1    wreg      void 
   867 ;; Registers used:
   868 ;;		wreg, status,2
   869 ;; Tracked objects:
   870 ;;		On entry : 0/0
   871 ;;		On exit  : 0/0
   872 ;;		Unchanged: 0/0
   873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   874 ;;      Params:         2       0       0       0       0
   875 ;;      Locals:         2       0       0       0       0
   876 ;;      Temps:          2       0       0       0       0
   877 ;;      Totals:         6       0       0       0       0
   878 ;;Total ram usage:        6 bytes
   879 ;; Hardware stack levels used: 1
   880 ;; This function calls:
   881 ;;		Nothing
   882 ;; This function is called by:
   883 ;;		_initLCD
   884 ;;		_WriteNumber
   885 ;; This function uses a non-reentrant model
   886 ;;
   887                           
   888                           
   889                           ;psect for function _delay
   890  06B8                     _delay:
   891  06B8                     l756:	
   892                           ;incstack = 0
   893                           ; Regs used in _delay: [wreg+status,2]
   894                           
   895                           
   896                           ;LCD.c: 7: void delay(int N);LCD.c: 8: {;LCD.c: 9:     int i;;LCD.c: 10:     for(i = 0; 
      +                          i < N; i++){_delay((unsigned long)((10)*(8000000/4000.0)));}
   897  06B8  01F4               	clrf	delay@i
   898  06B9  01F5               	clrf	delay@i+1
   899  06BA  2ECA               	goto	l40
   900  06BB                     l758:
   901  06BB  301A               	movlw	26
   902  06BC  00F3               	movwf	??_delay+1
   903  06BD  30F8               	movlw	248
   904  06BE  00F2               	movwf	??_delay
   905  06BF                     u117:
   906  06BF  0BF2               	decfsz	??_delay,f
   907  06C0  2EBF               	goto	u117
   908  06C1  0BF3               	decfsz	??_delay+1,f
   909  06C2  2EBF               	goto	u117
   910  06C3  0000               	nop
   911  06C4  3001               	movlw	1
   912  06C5  07F4               	addwf	delay@i,f
   913  06C6  1803               	skipnc
   914  06C7  0AF5               	incf	delay@i+1,f
   915  06C8  3000               	movlw	0
   916  06C9  07F5               	addwf	delay@i+1,f
   917  06CA                     l40:
   918  06CA  0875               	movf	delay@i+1,w
   919  06CB  3A80               	xorlw	128
   920  06CC  00F2               	movwf	??_delay
   921  06CD  0871               	movf	delay@N+1,w
   922  06CE  3A80               	xorlw	128
   923  06CF  0272               	subwf	??_delay,w
   924  06D0  1D03               	skipz
   925  06D1  2ED4               	goto	u65
   926  06D2  0870               	movf	delay@N,w
   927  06D3  0274               	subwf	delay@i,w
   928  06D4                     u65:
   929  06D4  1C03               	skipc
   930  06D5  2ED7               	goto	u61
   931  06D6  2ED8               	goto	u60
   932  06D7                     u61:
   933  06D7  2EBB               	goto	l758
   934  06D8                     u60:
   935  06D8                     l43:
   936  06D8  0008               	return
   937  06D9                     __end_of_delay:
   938  007E                     btemp	set	126	;btemp
   939  007E                     wtemp0	set	126
   940                           
   941                           	psect	config
   942                           
   943                           ;Config register CONFIG @ 0x2007
   944                           ;	Oscillator Selection bits
   945                           ;	FOSC = HS, HS oscillator
   946                           ;	Watchdog Timer Enable bit
   947                           ;	WDTE = ON, WDT enabled
   948                           ;	Power-up Timer Enable bit
   949                           ;	PWRTE = OFF, PWRT disabled
   950                           ;	Brown-out Reset Enable bit
   951                           ;	BOREN = ON, BOR enabled
   952                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   953                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   954                           ;	Data EEPROM Memory Code Protection bit
   955                           ;	CPD = OFF, Data EEPROM code protection off
   956                           ;	Flash Program Memory Write Enable bits
   957                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   958                           ;	In-Circuit Debugger Mode bit
   959                           ;	DEBUG = 0x1, unprogrammed default
   960                           ;	Flash Program Memory Code Protection bit
   961                           ;	CP = OFF, Code protection off
   962  2007                     	org	8199
   963  2007  3FFE               	dw	16382

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      0      12
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_WriteNumber
    _initLCD->_delay
    _WriteNumber->_delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2737
                        _WriteNumber
                            _initLCD
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              0     0      0    1262
                              _delay
 ---------------------------------------------------------------------------------
 (1) _WriteNumber                                          8     6      2    1475
                                              6 COMMON     8     6      2
                              _delay
 ---------------------------------------------------------------------------------
 (2) _delay                                                6     4      2    1262
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _WriteNumber
     _delay
   _initLCD
     _delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       C       5       15.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1A      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Oct 23 01:44:39 2021

                     l40 06CA                       l17 06B5                       l43 06D8  
                     l54 07ED                       l46 075A                       _T1 0024  
                     _T2 0020                       u60 06D8                       u61 06D7  
                     u70 0766                       u71 0765                       u65 06D4  
                     u90 0784                       u91 0783                       u85 076C  
                    l800 0737                      l810 074E                      l802 0738  
                    l812 0751                      l804 0739                      l830 0784  
                    l822 0760                      l814 075B                      l806 0742  
                    l840 07B2                      l832 078E                      l824 0766  
                    l816 075B                      l808 0745                      l760 06D9  
                    l850 07B7                      l842 07B3                      l834 0797  
                    l826 0778                      l770 06EC                      l762 06DC  
                    l756 06B8                      l860 07E0                      l852 07B8  
                    l844 07B4                      l836 07A3                      l828 077E  
                    l780 0703                      l772 06ED                      l764 06DF  
                    l758 06BB                      l854 07C2                      l846 07B5  
                    l838 07AF                      l790 071E                      l782 0706  
                    l774 06EE                      l766 06E8                      l862 06A8  
                    l856 07CE                      l848 07B6                      l792 0727  
                    l784 070F                      l776 06F7                      l768 06EB  
                    l864 06AD                      l858 07DA                      l794 072A  
                    l786 0712                      l778 06FA                      l796 0733  
                    l788 071B                      l798 0736                      _RD0 0040  
                    _RD1 0041                      _RD2 0042                      _RD3 0043  
                    u100 07ED                      _RD4 0044                      u101 07EC  
                    _RD5 0045                      _RD6 0046                      _RD7 0047  
                    u105 07E9                      u117 06BF     __size_of_WriteNumber 0093  
                   _main 06A8                     btemp 007E                     start 0000  
                  ?_main 0070                    _TRISD 0088          __end_of_initLCD 075B  
                  _delay 06B8                    _count 002A                    status 0003  
                  wtemp0 007E          __initialization 07EE             __end_of_main 06B8  
                 ??_main 007E                   ?_delay 0070                   delay@N 0070  
                 delay@i 0074                ??_initLCD 0076  __end_of__initialization 07FC  
         __pcstackCOMMON 0070            __end_of_delay 06D9                  ??_delay 0072  
             __pbssBANK0 0020               __pmaintext 06A8             WriteNumber@i 007C  
          ??_WriteNumber 0078                  _capture 0028                  __ptext1 06D9  
                __ptext2 075B                  __ptext3 06B8                  _initLCD 06D9  
    __end_of_WriteNumber 07EE     end_of_initialization 07FC              _WriteNumber 075B  
    start_initialization 07EE                ___latbits 0002          WriteNumber@SBit 007A  
               ?_initLCD 0070           __size_of_delay 0021        WriteNumber@number 0076  
           ?_WriteNumber 0076         __size_of_initLCD 0082            __size_of_main 0010  
