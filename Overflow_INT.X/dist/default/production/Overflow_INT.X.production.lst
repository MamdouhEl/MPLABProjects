

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Oct 22 14:07:31 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	intentry,global,class=CODE,delta=2
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 2.20
    14                           ; Generated 12/02/2020 GMT
    15                           ; 
    16                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F877A Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  0007                     	;# 
    55  0008                     	;# 
    56  0009                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  000D                     	;# 
    61  000E                     	;# 
    62  000E                     	;# 
    63  000F                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0013                     	;# 
    68  0014                     	;# 
    69  0015                     	;# 
    70  0015                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001B                     	;# 
    77  001B                     	;# 
    78  001C                     	;# 
    79  001D                     	;# 
    80  001E                     	;# 
    81  001F                     	;# 
    82  0081                     	;# 
    83  0085                     	;# 
    84  0086                     	;# 
    85  0087                     	;# 
    86  0088                     	;# 
    87  0089                     	;# 
    88  008C                     	;# 
    89  008D                     	;# 
    90  008E                     	;# 
    91  0091                     	;# 
    92  0092                     	;# 
    93  0093                     	;# 
    94  0094                     	;# 
    95  0098                     	;# 
    96  0099                     	;# 
    97  009C                     	;# 
    98  009D                     	;# 
    99  009E                     	;# 
   100  009F                     	;# 
   101  010C                     	;# 
   102  010D                     	;# 
   103  010E                     	;# 
   104  010F                     	;# 
   105  018C                     	;# 
   106  018D                     	;# 
   107  0000                     	;# 
   108  0001                     	;# 
   109  0002                     	;# 
   110  0003                     	;# 
   111  0004                     	;# 
   112  0005                     	;# 
   113  0006                     	;# 
   114  0007                     	;# 
   115  0008                     	;# 
   116  0009                     	;# 
   117  000A                     	;# 
   118  000B                     	;# 
   119  000C                     	;# 
   120  000D                     	;# 
   121  000E                     	;# 
   122  000E                     	;# 
   123  000F                     	;# 
   124  0010                     	;# 
   125  0011                     	;# 
   126  0012                     	;# 
   127  0013                     	;# 
   128  0014                     	;# 
   129  0015                     	;# 
   130  0015                     	;# 
   131  0016                     	;# 
   132  0017                     	;# 
   133  0018                     	;# 
   134  0019                     	;# 
   135  001A                     	;# 
   136  001B                     	;# 
   137  001B                     	;# 
   138  001C                     	;# 
   139  001D                     	;# 
   140  001E                     	;# 
   141  001F                     	;# 
   142  0081                     	;# 
   143  0085                     	;# 
   144  0086                     	;# 
   145  0087                     	;# 
   146  0088                     	;# 
   147  0089                     	;# 
   148  008C                     	;# 
   149  008D                     	;# 
   150  008E                     	;# 
   151  0091                     	;# 
   152  0092                     	;# 
   153  0093                     	;# 
   154  0094                     	;# 
   155  0098                     	;# 
   156  0099                     	;# 
   157  009C                     	;# 
   158  009D                     	;# 
   159  009E                     	;# 
   160  009F                     	;# 
   161  010C                     	;# 
   162  010D                     	;# 
   163  010E                     	;# 
   164  010F                     	;# 
   165  018C                     	;# 
   166  018D                     	;# 
   167  0010                     _T1CON	set	16
   168  0030                     _RB0	set	48
   169  005E                     _PEIE	set	94
   170  005F                     _GIE	set	95
   171  0060                     _TMR1IF	set	96
   172  0460                     _TMR1IE	set	1120
   173  0430                     _TRISB0	set	1072
   174                           
   175                           	psect	cinit
   176  000F                     start_initialization:	
   177                           ; #config settings
   178                           
   179  000F                     __initialization:
   180                           
   181                           ; Clear objects allocated to COMMON
   182  000F  01F0               	clrf	__pbssCOMMON& (0+127)
   183  0010  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   184  0011  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   185  0012  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   186  0013                     end_of_initialization:	
   187                           ;End of C runtime variable initialization code
   188                           
   189  0013                     __end_of__initialization:
   190  0013  0183               	clrf	3
   191  0014  120A  118A  2842   	ljmp	_main	;jump to C main() function
   192                           
   193                           	psect	bssCOMMON
   194  0070                     __pbssCOMMON:
   195  0070                     _count:
   196  0070                     	ds	2
   197  0072                     _value:
   198  0072                     	ds	2
   199                           
   200                           	psect	cstackCOMMON
   201  0074                     __pcstackCOMMON:
   202  0074                     ?_ISR:
   203  0074                     ??_ISR:	
   204                           ; 1 bytes @ 0x0
   205                           
   206  0074                     ?_main:	
   207                           ; 1 bytes @ 0x0
   208                           
   209                           
   210                           ; 1 bytes @ 0x0
   211  0074                     	ds	4
   212  0078                     ??_main:
   213                           
   214                           	psect	maintext
   215  0042                     __pmaintext:	
   216                           ; 1 bytes @ 0x4
   217 ;;
   218 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   219 ;;
   220 ;; *************** function _main *****************
   221 ;; Defined at:
   222 ;;		line 52 in file "newmain.c"
   223 ;; Parameters:    Size  Location     Type
   224 ;;		None
   225 ;; Auto vars:     Size  Location     Type
   226 ;;		None
   227 ;; Return value:  Size  Location     Type
   228 ;;                  1    wreg      void 
   229 ;; Registers used:
   230 ;;		wreg
   231 ;; Tracked objects:
   232 ;;		On entry : B00/0
   233 ;;		On exit  : 0/0
   234 ;;		Unchanged: 0/0
   235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   236 ;;      Params:         0       0       0       0       0
   237 ;;      Locals:         0       0       0       0       0
   238 ;;      Temps:          0       0       0       0       0
   239 ;;      Totals:         0       0       0       0       0
   240 ;;Total ram usage:        0 bytes
   241 ;; Hardware stack levels required when called: 1
   242 ;; This function calls:
   243 ;;		Nothing
   244 ;; This function is called by:
   245 ;;		Startup code after reset
   246 ;; This function uses a non-reentrant model
   247 ;;
   248                           
   249                           
   250                           ;psect for function _main
   251  0042                     _main:
   252  0042                     l637:	
   253                           ;incstack = 0
   254                           ; Regs used in _main: [wreg]
   255                           
   256                           
   257                           ;newmain.c: 55:     TRISB0 = 0;
   258  0042  1683               	bsf	3,5	;RP0=1, select bank1
   259  0043  1303               	bcf	3,6	;RP1=0, select bank1
   260  0044  1006               	bcf	6,0	;volatile
   261  0045                     l639:
   262                           
   263                           ;newmain.c: 56:     T1CON = 0x01;
   264  0045  3001               	movlw	1
   265  0046  1283               	bcf	3,5	;RP0=0, select bank0
   266  0047  1303               	bcf	3,6	;RP1=0, select bank0
   267  0048  0090               	movwf	16	;volatile
   268  0049                     l641:
   269                           
   270                           ;newmain.c: 57:     GIE = 1;
   271  0049  178B               	bsf	11,7	;volatile
   272  004A                     l643:
   273                           
   274                           ;newmain.c: 58:     PEIE = 1;
   275  004A  170B               	bsf	11,6	;volatile
   276  004B                     l645:
   277                           
   278                           ;newmain.c: 59:     TMR1IE = 1;
   279  004B  1683               	bsf	3,5	;RP0=1, select bank1
   280  004C  1303               	bcf	3,6	;RP1=0, select bank1
   281  004D  140C               	bsf	12,0	;volatile
   282  004E                     l647:
   283                           
   284                           ;newmain.c: 60:     RB0 = value;
   285  004E  1872               	btfsc	_value,0
   286  004F  2851               	goto	u51
   287  0050  2855               	goto	u50
   288  0051                     u51:
   289  0051  1283               	bcf	3,5	;RP0=0, select bank0
   290  0052  1303               	bcf	3,6	;RP1=0, select bank0
   291  0053  1406               	bsf	6,0	;volatile
   292  0054  2858               	goto	u64
   293  0055                     u50:
   294  0055  1283               	bcf	3,5	;RP0=0, select bank0
   295  0056  1303               	bcf	3,6	;RP1=0, select bank0
   296  0057  1006               	bcf	6,0	;volatile
   297  0058                     u64:
   298  0058  284E               	goto	l647
   299  0059  120A  118A  280C   	ljmp	start
   300  005C                     __end_of_main:
   301                           
   302                           	psect	text1
   303  0017                     __ptext1:	
   304 ;; *************** function _ISR *****************
   305 ;; Defined at:
   306 ;;		line 31 in file "newmain.c"
   307 ;; Parameters:    Size  Location     Type
   308 ;;		None
   309 ;; Auto vars:     Size  Location     Type
   310 ;;		None
   311 ;; Return value:  Size  Location     Type
   312 ;;                  1    wreg      void 
   313 ;; Registers used:
   314 ;;		wreg, status,2, status,0
   315 ;; Tracked objects:
   316 ;;		On entry : 0/0
   317 ;;		On exit  : 0/0
   318 ;;		Unchanged: 0/0
   319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   320 ;;      Params:         0       0       0       0       0
   321 ;;      Locals:         0       0       0       0       0
   322 ;;      Temps:          4       0       0       0       0
   323 ;;      Totals:         4       0       0       0       0
   324 ;;Total ram usage:        4 bytes
   325 ;; Hardware stack levels used: 1
   326 ;; This function calls:
   327 ;;		Nothing
   328 ;; This function is called by:
   329 ;;		Interrupt level 1
   330 ;; This function uses a non-reentrant model
   331 ;;
   332                           
   333                           
   334                           ;psect for function _ISR
   335  0017                     _ISR:
   336  0017                     i1l625:
   337                           
   338                           ;newmain.c: 32:     if(TMR1IF == 1){
   339  0017  1283               	bcf	3,5	;RP0=0, select bank0
   340  0018  1303               	bcf	3,6	;RP1=0, select bank0
   341  0019  1C0C               	btfss	12,0	;volatile
   342  001A  281C               	goto	u1_21
   343  001B  281D               	goto	u1_20
   344  001C                     u1_21:
   345  001C  283B               	goto	i1l25
   346  001D                     u1_20:
   347  001D                     i1l627:
   348                           
   349                           ;newmain.c: 33:         count++;
   350  001D  3001               	movlw	1
   351  001E  07F0               	addwf	_count,f	;volatile
   352  001F  1803               	skipnc
   353  0020  0AF1               	incf	_count+1,f	;volatile
   354  0021  3000               	movlw	0
   355  0022  07F1               	addwf	_count+1,f	;volatile
   356  0023                     i1l629:
   357                           
   358                           ;newmain.c: 36:         if(count == 30){
   359  0023  301E               	movlw	30
   360  0024  0670               	xorwf	_count,w	;volatile
   361  0025  0471               	iorwf	_count+1,w	;volatile
   362  0026  1D03               	btfss	3,2
   363  0027  2829               	goto	u2_21
   364  0028  282A               	goto	u2_20
   365  0029                     u2_21:
   366  0029  283A               	goto	i1l635
   367  002A                     u2_20:
   368  002A                     i1l631:
   369                           
   370                           ;newmain.c: 38:             value = !value;
   371  002A  0872               	movf	_value,w
   372  002B  0473               	iorwf	_value+1,w
   373  002C  1903               	btfsc	3,2
   374  002D  282F               	goto	u3_21
   375  002E  2831               	goto	u3_20
   376  002F                     u3_21:
   377  002F  3001               	movlw	1
   378  0030  2832               	goto	u4_20
   379  0031                     u3_20:
   380  0031  3000               	movlw	0
   381  0032                     u4_20:
   382  0032  00F4               	movwf	??_ISR
   383  0033  01F5               	clrf	??_ISR+1
   384  0034  0874               	movf	??_ISR,w
   385  0035  00F2               	movwf	_value
   386  0036  0875               	movf	??_ISR+1,w
   387  0037  00F3               	movwf	_value+1
   388  0038                     i1l633:
   389                           
   390                           ;newmain.c: 39:             count = 0;
   391  0038  01F0               	clrf	_count	;volatile
   392  0039  01F1               	clrf	_count+1	;volatile
   393  003A                     i1l635:
   394                           
   395                           ;newmain.c: 42:         TMR1IF = 0;
   396  003A  100C               	bcf	12,0	;volatile
   397  003B                     i1l25:
   398  003B  0877               	movf	??_ISR+3,w
   399  003C  008A               	movwf	10
   400  003D  0E76               	swapf	??_ISR+2,w
   401  003E  0083               	movwf	3
   402  003F  0EFE               	swapf	btemp,f
   403  0040  0E7E               	swapf	btemp,w
   404  0041  0009               	retfie
   405  0042                     __end_of_ISR:
   406  007E                     btemp	set	126	;btemp
   407  007E                     wtemp0	set	126
   408                           
   409                           	psect	intentry
   410  0004                     __pintentry:	
   411                           ;incstack = 0
   412                           ; Regs used in _ISR: [wreg+status,2+status,0]
   413                           
   414  0004                     interrupt_function:
   415  007E                     saved_w	set	btemp
   416  0004  00FE               	movwf	btemp
   417  0005  0E03               	swapf	3,w
   418  0006  00F6               	movwf	??_ISR+2
   419  0007  080A               	movf	10,w
   420  0008  00F7               	movwf	??_ISR+3
   421  0009  120A  118A  2817   	ljmp	_ISR
   422                           
   423                           	psect	config
   424                           
   425                           ;Config register CONFIG @ 0x2007
   426                           ;	Oscillator Selection bits
   427                           ;	FOSC = HS, HS oscillator
   428                           ;	Watchdog Timer Enable bit
   429                           ;	WDTE = OFF, WDT disabled
   430                           ;	Power-up Timer Enable bit
   431                           ;	PWRTE = OFF, PWRT disabled
   432                           ;	Brown-out Reset Enable bit
   433                           ;	BOREN = ON, BOR enabled
   434                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   435                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   436                           ;	Data EEPROM Memory Code Protection bit
   437                           ;	CPD = OFF, Data EEPROM code protection off
   438                           ;	Flash Program Memory Write Enable bits
   439                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   440                           ;	In-Circuit Debugger Mode bit
   441                           ;	DEBUG = 0x1, unprogrammed default
   442                           ;	Flash Program Memory Code Protection bit
   443                           ;	CP = OFF, Code protection off
   444  2007                     	org	8199
   445  2007  3FFA               	dw	16378

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       8       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       8      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Oct 22 14:07:31 2021

                     u50 0055                       u51 0051                       u64 0058  
                    l641 0049                      l643 004A                      l645 004B  
                    l637 0042                      l647 004E                      l639 0045  
                    _GIE 005F                      _RB0 0030                      _ISR 0017  
                   ?_ISR 0074                     _PEIE 005E                     i1l25 003B  
                   u1_20 001D                     u1_21 001C                     u2_20 002A  
                   u2_21 0029                     u3_20 0031                     u3_21 002F  
                   u4_20 0032                     _main 0042                     btemp 007E  
                   start 000C                    ??_ISR 0074                    ?_main 0074  
                  _T1CON 0010                    i1l631 002A                    i1l633 0038  
                  i1l625 0017                    i1l635 003A                    i1l627 001D  
                  i1l629 0023                    _count 0070                    _value 0072  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 005C                   ??_main 0078  
                 _TMR1IE 0460                   _TMR1IF 0060                   _TRISB0 0430  
                 saved_w 007E  __end_of__initialization 0013           __pcstackCOMMON 0074  
             __pmaintext 0042               __pintentry 0004                  __ptext1 0017  
           __size_of_ISR 002B     end_of_initialization 0013      start_initialization 000F  
            __end_of_ISR 0042              __pbssCOMMON 0070                ___latbits 0002  
      interrupt_function 0004            __size_of_main 001A                 intlevel1 0000  
