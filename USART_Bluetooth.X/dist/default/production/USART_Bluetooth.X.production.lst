

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Nov 28 15:20:58 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 12/02/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0094                     	;# 
    97  0098                     	;# 
    98  0099                     	;# 
    99  009C                     	;# 
   100  009D                     	;# 
   101  009E                     	;# 
   102  009F                     	;# 
   103  010C                     	;# 
   104  010D                     	;# 
   105  010E                     	;# 
   106  010F                     	;# 
   107  018C                     	;# 
   108  018D                     	;# 
   109  0000                     	;# 
   110  0001                     	;# 
   111  0002                     	;# 
   112  0003                     	;# 
   113  0004                     	;# 
   114  0005                     	;# 
   115  0006                     	;# 
   116  0007                     	;# 
   117  0008                     	;# 
   118  0009                     	;# 
   119  000A                     	;# 
   120  000B                     	;# 
   121  000C                     	;# 
   122  000D                     	;# 
   123  000E                     	;# 
   124  000E                     	;# 
   125  000F                     	;# 
   126  0010                     	;# 
   127  0011                     	;# 
   128  0012                     	;# 
   129  0013                     	;# 
   130  0014                     	;# 
   131  0015                     	;# 
   132  0015                     	;# 
   133  0016                     	;# 
   134  0017                     	;# 
   135  0018                     	;# 
   136  0019                     	;# 
   137  001A                     	;# 
   138  001B                     	;# 
   139  001B                     	;# 
   140  001C                     	;# 
   141  001D                     	;# 
   142  001E                     	;# 
   143  001F                     	;# 
   144  0081                     	;# 
   145  0085                     	;# 
   146  0086                     	;# 
   147  0087                     	;# 
   148  0088                     	;# 
   149  0089                     	;# 
   150  008C                     	;# 
   151  008D                     	;# 
   152  008E                     	;# 
   153  0091                     	;# 
   154  0092                     	;# 
   155  0093                     	;# 
   156  0094                     	;# 
   157  0098                     	;# 
   158  0099                     	;# 
   159  009C                     	;# 
   160  009D                     	;# 
   161  009E                     	;# 
   162  009F                     	;# 
   163  010C                     	;# 
   164  010D                     	;# 
   165  010E                     	;# 
   166  010F                     	;# 
   167  018C                     	;# 
   168  018D                     	;# 
   169  0000                     	;# 
   170  0001                     	;# 
   171  0002                     	;# 
   172  0003                     	;# 
   173  0004                     	;# 
   174  0005                     	;# 
   175  0006                     	;# 
   176  0007                     	;# 
   177  0008                     	;# 
   178  0009                     	;# 
   179  000A                     	;# 
   180  000B                     	;# 
   181  000C                     	;# 
   182  000D                     	;# 
   183  000E                     	;# 
   184  000E                     	;# 
   185  000F                     	;# 
   186  0010                     	;# 
   187  0011                     	;# 
   188  0012                     	;# 
   189  0013                     	;# 
   190  0014                     	;# 
   191  0015                     	;# 
   192  0015                     	;# 
   193  0016                     	;# 
   194  0017                     	;# 
   195  0018                     	;# 
   196  0019                     	;# 
   197  001A                     	;# 
   198  001B                     	;# 
   199  001B                     	;# 
   200  001C                     	;# 
   201  001D                     	;# 
   202  001E                     	;# 
   203  001F                     	;# 
   204  0081                     	;# 
   205  0085                     	;# 
   206  0086                     	;# 
   207  0087                     	;# 
   208  0088                     	;# 
   209  0089                     	;# 
   210  008C                     	;# 
   211  008D                     	;# 
   212  008E                     	;# 
   213  0091                     	;# 
   214  0092                     	;# 
   215  0093                     	;# 
   216  0094                     	;# 
   217  0098                     	;# 
   218  0099                     	;# 
   219  009C                     	;# 
   220  009D                     	;# 
   221  009E                     	;# 
   222  009F                     	;# 
   223  010C                     	;# 
   224  010D                     	;# 
   225  010E                     	;# 
   226  010F                     	;# 
   227  018C                     	;# 
   228  018D                     	;# 
   229  0000                     	;# 
   230  0001                     	;# 
   231  0002                     	;# 
   232  0003                     	;# 
   233  0004                     	;# 
   234  0005                     	;# 
   235  0006                     	;# 
   236  0007                     	;# 
   237  0008                     	;# 
   238  0009                     	;# 
   239  000A                     	;# 
   240  000B                     	;# 
   241  000C                     	;# 
   242  000D                     	;# 
   243  000E                     	;# 
   244  000E                     	;# 
   245  000F                     	;# 
   246  0010                     	;# 
   247  0011                     	;# 
   248  0012                     	;# 
   249  0013                     	;# 
   250  0014                     	;# 
   251  0015                     	;# 
   252  0015                     	;# 
   253  0016                     	;# 
   254  0017                     	;# 
   255  0018                     	;# 
   256  0019                     	;# 
   257  001A                     	;# 
   258  001B                     	;# 
   259  001B                     	;# 
   260  001C                     	;# 
   261  001D                     	;# 
   262  001E                     	;# 
   263  001F                     	;# 
   264  0081                     	;# 
   265  0085                     	;# 
   266  0086                     	;# 
   267  0087                     	;# 
   268  0088                     	;# 
   269  0089                     	;# 
   270  008C                     	;# 
   271  008D                     	;# 
   272  008E                     	;# 
   273  0091                     	;# 
   274  0092                     	;# 
   275  0093                     	;# 
   276  0094                     	;# 
   277  0098                     	;# 
   278  0099                     	;# 
   279  009C                     	;# 
   280  009D                     	;# 
   281  009E                     	;# 
   282  009F                     	;# 
   283  010C                     	;# 
   284  010D                     	;# 
   285  010E                     	;# 
   286  010F                     	;# 
   287  018C                     	;# 
   288  018D                     	;# 
   289  001A                     _RCREG	set	26
   290  0019                     _TXREG	set	25
   291  0018                     _RCSTA	set	24
   292  0006                     _PORTB	set	6
   293  0008                     _PORTD	set	8
   294  0065                     _RCIF	set	101
   295  0064                     _TXIF	set	100
   296  0037                     _RB7	set	55
   297  0099                     _SPBRG	set	153
   298  0098                     _TXSTA	set	152
   299  0087                     _TRISC	set	135
   300  0086                     _TRISB	set	134
   301  0088                     _TRISD	set	136
   302  04C1                     _TRMT	set	1217
   303  0437                     _TRISB7	set	1079
   304                           
   305                           	psect	cinit
   306  07FC                     start_initialization:	
   307                           ; #config settings
   308                           
   309  07FC                     __initialization:
   310  07FC                     end_of_initialization:	
   311                           ;End of C runtime variable initialization code
   312                           
   313  07FC                     __end_of__initialization:
   314  07FC  0183               	clrf	3
   315  07FD  120A  118A  2F2B   	ljmp	_main	;jump to C main() function
   316                           
   317                           	psect	cstackCOMMON
   318  0070                     __pcstackCOMMON:
   319  0070                     ?_Lcd_CmdWrite:
   320  0070                     ??_Lcd_CmdWrite:	
   321                           ; 1 bytes @ 0x0
   322                           
   323  0070                     ?_UART_RxChar:	
   324                           ; 1 bytes @ 0x0
   325                           
   326  0070                     ??_UART_RxChar:	
   327                           ; 1 bytes @ 0x0
   328                           
   329  0070                     ?_main:	
   330                           ; 1 bytes @ 0x0
   331                           
   332  0070                     ?___lldiv:	
   333                           ; 1 bytes @ 0x0
   334                           
   335  0070                     ___lldiv@divisor:	
   336                           ; 4 bytes @ 0x0
   337                           
   338                           
   339                           ; 4 bytes @ 0x0
   340  0070                     	ds	2
   341  0072                     Lcd_CmdWrite@cmd:
   342                           
   343                           ; 1 bytes @ 0x2
   344  0072                     	ds	2
   345  0074                     ___lldiv@dividend:
   346                           
   347                           ; 4 bytes @ 0x4
   348  0074                     	ds	4
   349  0078                     ??___lldiv:
   350                           
   351                           ; 1 bytes @ 0x8
   352  0078                     	ds	1
   353  0079                     ___lldiv@quotient:
   354                           
   355                           ; 4 bytes @ 0x9
   356  0079                     	ds	4
   357  007D                     ___lldiv@counter:
   358                           
   359                           ; 1 bytes @ 0xD
   360  007D                     	ds	1
   361  007E                     ??_main:
   362                           
   363                           	psect	cstackBANK0
   364  0020                     __pcstackBANK0:	
   365                           ; 1 bytes @ 0xE
   366                           
   367  0020                     ?_UART_Init:
   368  0020                     UART_Init@baudRate:	
   369                           ; 1 bytes @ 0x0
   370                           
   371                           
   372                           ; 2 bytes @ 0x0
   373  0020                     	ds	2
   374  0022                     ??_UART_Init:
   375                           
   376                           ; 1 bytes @ 0x2
   377  0022                     	ds	4
   378                           
   379                           	psect	maintext
   380  072B                     __pmaintext:	
   381 ;;
   382 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   383 ;;
   384 ;; *************** function _main *****************
   385 ;; Defined at:
   386 ;;		line 149 in file "newmain.c"
   387 ;; Parameters:    Size  Location     Type
   388 ;;		None
   389 ;; Auto vars:     Size  Location     Type
   390 ;;  x               1    0        unsigned char 
   391 ;; Return value:  Size  Location     Type
   392 ;;                  1    wreg      void 
   393 ;; Registers used:
   394 ;;		wreg, status,2, status,0, pclath, cstack
   395 ;; Tracked objects:
   396 ;;		On entry : B00/0
   397 ;;		On exit  : 0/0
   398 ;;		Unchanged: 0/0
   399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   400 ;;      Params:         0       0       0       0       0
   401 ;;      Locals:         0       0       0       0       0
   402 ;;      Temps:          0       0       0       0       0
   403 ;;      Totals:         0       0       0       0       0
   404 ;;Total ram usage:        0 bytes
   405 ;; Hardware stack levels required when called: 2
   406 ;; This function calls:
   407 ;;		_Lcd_CmdWrite
   408 ;;		_UART_Init
   409 ;;		_UART_RxChar
   410 ;; This function is called by:
   411 ;;		Startup code after reset
   412 ;; This function uses a non-reentrant model
   413 ;;
   414                           
   415                           
   416                           ;psect for function _main
   417  072B                     _main:
   418  072B                     l791:	
   419                           ;incstack = 0
   420                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   421                           
   422                           
   423                           ;newmain.c: 150:     TRISB7 = 0;
   424  072B  1683               	bsf	3,5	;RP0=1, select bank1
   425  072C  1303               	bcf	3,6	;RP1=0, select bank1
   426  072D  1386               	bcf	6,7	;volatile
   427  072E                     l793:
   428                           
   429                           ;newmain.c: 151:     char x;;newmain.c: 153:     TRISD = 0x00;
   430  072E  0188               	clrf	8	;volatile
   431                           
   432                           ;newmain.c: 154:     TRISB = 0x00;
   433  072F  0186               	clrf	6	;volatile
   434  0730                     l795:
   435                           
   436                           ;newmain.c: 157:     Lcd_CmdWrite(0x38);
   437  0730  3038               	movlw	56
   438  0731  120A  118A  2708  120A  118A  	fcall	_Lcd_CmdWrite
   439  0736                     l797:
   440                           
   441                           ;newmain.c: 158:     Lcd_CmdWrite(0x0E);
   442  0736  300E               	movlw	14
   443  0737  120A  118A  2708  120A  118A  	fcall	_Lcd_CmdWrite
   444  073C                     l799:
   445                           
   446                           ;newmain.c: 159:     Lcd_CmdWrite(0x01);
   447  073C  3001               	movlw	1
   448  073D  120A  118A  2708  120A  118A  	fcall	_Lcd_CmdWrite
   449  0742                     l801:
   450                           
   451                           ;newmain.c: 160:     Lcd_CmdWrite(0x80);
   452  0742  3080               	movlw	128
   453  0743  120A  118A  2708  120A  118A  	fcall	_Lcd_CmdWrite
   454  0748                     l803:
   455                           
   456                           ;newmain.c: 163:     UART_Init(9600);
   457  0748  3080               	movlw	128
   458  0749  1283               	bcf	3,5	;RP0=0, select bank0
   459  074A  1303               	bcf	3,6	;RP1=0, select bank0
   460  074B  00A0               	movwf	UART_Init@baudRate
   461  074C  3025               	movlw	37
   462  074D  00A1               	movwf	UART_Init@baudRate+1
   463  074E  120A  118A  275F  120A  118A  	fcall	_UART_Init
   464  0753                     l805:
   465  0753  120A  118A  26FF  120A  118A  	fcall	_UART_RxChar
   466  0758                     l807:
   467                           
   468                           ;newmain.c: 170:         RB7 = 1;
   469  0758  1283               	bcf	3,5	;RP0=0, select bank0
   470  0759  1303               	bcf	3,6	;RP1=0, select bank0
   471  075A  1786               	bsf	6,7	;volatile
   472  075B  2F53               	goto	l805
   473  075C  120A  118A  2800   	ljmp	start
   474  075F                     __end_of_main:
   475                           
   476                           	psect	text1
   477  06FF                     __ptext1:	
   478 ;; *************** function _UART_RxChar *****************
   479 ;; Defined at:
   480 ;;		line 45 in file "UART.c"
   481 ;; Parameters:    Size  Location     Type
   482 ;;		None
   483 ;; Auto vars:     Size  Location     Type
   484 ;;		None
   485 ;; Return value:  Size  Location     Type
   486 ;;                  1    wreg      unsigned char 
   487 ;; Registers used:
   488 ;;		wreg
   489 ;; Tracked objects:
   490 ;;		On entry : 0/0
   491 ;;		On exit  : 0/0
   492 ;;		Unchanged: 0/0
   493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   494 ;;      Params:         0       0       0       0       0
   495 ;;      Locals:         0       0       0       0       0
   496 ;;      Temps:          0       0       0       0       0
   497 ;;      Totals:         0       0       0       0       0
   498 ;;Total ram usage:        0 bytes
   499 ;; Hardware stack levels used: 1
   500 ;; This function calls:
   501 ;;		Nothing
   502 ;; This function is called by:
   503 ;;		_main
   504 ;; This function uses a non-reentrant model
   505 ;;
   506                           
   507                           
   508                           ;psect for function _UART_RxChar
   509  06FF                     _UART_RxChar:
   510  06FF                     l707:	
   511                           ;incstack = 0
   512                           ; Regs used in _UART_RxChar: [wreg]
   513                           
   514  06FF                     l72:	
   515                           ;UART.c: 47:     while(RCIF==0);
   516                           
   517  06FF  1283               	bcf	3,5	;RP0=0, select bank0
   518  0700  1303               	bcf	3,6	;RP1=0, select bank0
   519  0701  1E8C               	btfss	12,5	;volatile
   520  0702  2F04               	goto	u91
   521  0703  2F05               	goto	u90
   522  0704                     u91:
   523  0704  2EFF               	goto	l72
   524  0705                     u90:
   525  0705                     l74:
   526                           
   527                           ;UART.c: 48:     RCIF=0;
   528  0705  128C               	bcf	12,5	;volatile
   529  0706                     l709:
   530                           
   531                           ;UART.c: 49:     return(RCREG);
   532  0706  081A               	movf	26,w	;volatile
   533  0707                     l75:
   534  0707  0008               	return
   535  0708                     __end_of_UART_RxChar:
   536                           
   537                           	psect	text2
   538  075F                     __ptext2:	
   539 ;; *************** function _UART_Init *****************
   540 ;; Defined at:
   541 ;;		line 11 in file "UART.c"
   542 ;; Parameters:    Size  Location     Type
   543 ;;  baudRate        2    0[BANK0 ] int 
   544 ;; Auto vars:     Size  Location     Type
   545 ;;		None
   546 ;; Return value:  Size  Location     Type
   547 ;;                  1    wreg      void 
   548 ;; Registers used:
   549 ;;		wreg, status,2, status,0, pclath, cstack
   550 ;; Tracked objects:
   551 ;;		On entry : 0/0
   552 ;;		On exit  : 0/0
   553 ;;		Unchanged: 0/0
   554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   555 ;;      Params:         0       2       0       0       0
   556 ;;      Locals:         0       0       0       0       0
   557 ;;      Temps:          0       4       0       0       0
   558 ;;      Totals:         0       6       0       0       0
   559 ;;Total ram usage:        6 bytes
   560 ;; Hardware stack levels used: 1
   561 ;; Hardware stack levels required when called: 1
   562 ;; This function calls:
   563 ;;		___lldiv
   564 ;; This function is called by:
   565 ;;		_main
   566 ;; This function uses a non-reentrant model
   567 ;;
   568                           
   569                           
   570                           ;psect for function _UART_Init
   571  075F                     _UART_Init:
   572  075F                     l787:	
   573                           ;incstack = 0
   574                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
   575                           
   576                           
   577                           ;UART.c: 11: void UART_Init(int baudRate);UART.c: 12: {;UART.c: 13:     TRISC=0x80;
   578  075F  3080               	movlw	128
   579  0760  1683               	bsf	3,5	;RP0=1, select bank1
   580  0761  1303               	bcf	3,6	;RP1=0, select bank1
   581  0762  0087               	movwf	7	;volatile
   582                           
   583                           ;UART.c: 14:     TXSTA=(1<<5);
   584  0763  3020               	movlw	32
   585  0764  0098               	movwf	24	;volatile
   586                           
   587                           ;UART.c: 15:     RCSTA=(1<<7) | (1<<4);
   588  0765  3090               	movlw	144
   589  0766  1283               	bcf	3,5	;RP0=0, select bank0
   590  0767  1303               	bcf	3,6	;RP1=0, select bank0
   591  0768  0098               	movwf	24	;volatile
   592  0769                     l789:
   593                           
   594                           ;UART.c: 16:     SPBRG = (20000000UL/(long)(64UL*baudRate))-1;
   595  0769  0820               	movf	UART_Init@baudRate,w
   596  076A  00A2               	movwf	??_UART_Init
   597  076B  0821               	movf	UART_Init@baudRate+1,w
   598  076C  00A3               	movwf	??_UART_Init+1
   599  076D  3000               	movlw	0
   600  076E  1BA3               	btfsc	??_UART_Init+1,7
   601  076F  30FF               	movlw	255
   602  0770  00A4               	movwf	??_UART_Init+2
   603  0771  00A5               	movwf	??_UART_Init+3
   604  0772  3006               	movlw	6
   605  0773                     u215:
   606  0773  1003               	clrc
   607  0774  0DA2               	rlf	??_UART_Init,f
   608  0775  0DA3               	rlf	??_UART_Init+1,f
   609  0776  0DA4               	rlf	??_UART_Init+2,f
   610  0777  0DA5               	rlf	??_UART_Init+3,f
   611  0778                     u210:
   612  0778  3EFF               	addlw	-1
   613  0779  1D03               	skipz
   614  077A  2F73               	goto	u215
   615  077B  0825               	movf	??_UART_Init+3,w
   616  077C  00F3               	movwf	___lldiv@divisor+3
   617  077D  0824               	movf	??_UART_Init+2,w
   618  077E  00F2               	movwf	___lldiv@divisor+2
   619  077F  0823               	movf	??_UART_Init+1,w
   620  0780  00F1               	movwf	___lldiv@divisor+1
   621  0781  0822               	movf	??_UART_Init,w
   622  0782  00F0               	movwf	___lldiv@divisor
   623  0783  3001               	movlw	1
   624  0784  00F7               	movwf	___lldiv@dividend+3
   625  0785  3031               	movlw	49
   626  0786  00F6               	movwf	___lldiv@dividend+2
   627  0787  302D               	movlw	45
   628  0788  00F5               	movwf	___lldiv@dividend+1
   629  0789  3000               	movlw	0
   630  078A  00F4               	movwf	___lldiv@dividend
   631  078B  120A  118A  2796  120A  118A  	fcall	___lldiv
   632  0790  0870               	movf	?___lldiv,w
   633  0791  3EFF               	addlw	255
   634  0792  1683               	bsf	3,5	;RP0=1, select bank1
   635  0793  1303               	bcf	3,6	;RP1=0, select bank1
   636  0794  0099               	movwf	25	;volatile
   637  0795                     l55:
   638  0795  0008               	return
   639  0796                     __end_of_UART_Init:
   640                           
   641                           	psect	text3
   642  0796                     __ptext3:	
   643 ;; *************** function ___lldiv *****************
   644 ;; Defined at:
   645 ;;		line 5 in file "E:\MPLAB COMPILER\pic\sources\c90\common\__lldiv.c"
   646 ;; Parameters:    Size  Location     Type
   647 ;;  divisor         4    0[COMMON] unsigned long 
   648 ;;  dividend        4    4[COMMON] unsigned long 
   649 ;; Auto vars:     Size  Location     Type
   650 ;;  quotient        4    9[COMMON] unsigned long 
   651 ;;  counter         1   13[COMMON] unsigned char 
   652 ;; Return value:  Size  Location     Type
   653 ;;                  4    0[COMMON] unsigned long 
   654 ;; Registers used:
   655 ;;		wreg, status,2, status,0
   656 ;; Tracked objects:
   657 ;;		On entry : 0/0
   658 ;;		On exit  : 0/0
   659 ;;		Unchanged: 0/0
   660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   661 ;;      Params:         8       0       0       0       0
   662 ;;      Locals:         5       0       0       0       0
   663 ;;      Temps:          1       0       0       0       0
   664 ;;      Totals:        14       0       0       0       0
   665 ;;Total ram usage:       14 bytes
   666 ;; Hardware stack levels used: 1
   667 ;; This function calls:
   668 ;;		Nothing
   669 ;; This function is called by:
   670 ;;		_UART_Init
   671 ;; This function uses a non-reentrant model
   672 ;;
   673                           
   674                           
   675                           ;psect for function ___lldiv
   676  0796                     ___lldiv:
   677  0796                     l763:	
   678                           ;incstack = 0
   679                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
   680                           
   681  0796  3000               	movlw	0
   682  0797  00FC               	movwf	___lldiv@quotient+3
   683  0798  3000               	movlw	0
   684  0799  00FB               	movwf	___lldiv@quotient+2
   685  079A  3000               	movlw	0
   686  079B  00FA               	movwf	___lldiv@quotient+1
   687  079C  3000               	movlw	0
   688  079D  00F9               	movwf	___lldiv@quotient
   689  079E  0873               	movf	___lldiv@divisor+3,w
   690  079F  0472               	iorwf	___lldiv@divisor+2,w
   691  07A0  0471               	iorwf	___lldiv@divisor+1,w
   692  07A1  0470               	iorwf	___lldiv@divisor,w
   693  07A2  1903               	skipnz
   694  07A3  2FA5               	goto	u141
   695  07A4  2FA6               	goto	u140
   696  07A5                     u141:
   697  07A5  2FF3               	goto	l783
   698  07A6                     u140:
   699  07A6                     l765:
   700  07A6  01FD               	clrf	___lldiv@counter
   701  07A7  0AFD               	incf	___lldiv@counter,f
   702  07A8  2FB6               	goto	l769
   703  07A9                     l767:
   704  07A9  3001               	movlw	1
   705  07AA  00F8               	movwf	??___lldiv
   706  07AB                     u155:
   707  07AB  1003               	clrc
   708  07AC  0DF0               	rlf	___lldiv@divisor,f
   709  07AD  0DF1               	rlf	___lldiv@divisor+1,f
   710  07AE  0DF2               	rlf	___lldiv@divisor+2,f
   711  07AF  0DF3               	rlf	___lldiv@divisor+3,f
   712  07B0  0BF8               	decfsz	??___lldiv,f
   713  07B1  2FAB               	goto	u155
   714  07B2  3001               	movlw	1
   715  07B3  00F8               	movwf	??___lldiv
   716  07B4  0878               	movf	??___lldiv,w
   717  07B5  07FD               	addwf	___lldiv@counter,f
   718  07B6                     l769:
   719  07B6  1FF3               	btfss	___lldiv@divisor+3,7
   720  07B7  2FB9               	goto	u161
   721  07B8  2FBA               	goto	u160
   722  07B9                     u161:
   723  07B9  2FA9               	goto	l767
   724  07BA                     u160:
   725  07BA                     l771:
   726  07BA  3001               	movlw	1
   727  07BB  00F8               	movwf	??___lldiv
   728  07BC                     u175:
   729  07BC  1003               	clrc
   730  07BD  0DF9               	rlf	___lldiv@quotient,f
   731  07BE  0DFA               	rlf	___lldiv@quotient+1,f
   732  07BF  0DFB               	rlf	___lldiv@quotient+2,f
   733  07C0  0DFC               	rlf	___lldiv@quotient+3,f
   734  07C1  0BF8               	decfsz	??___lldiv,f
   735  07C2  2FBC               	goto	u175
   736  07C3                     l773:
   737  07C3  0873               	movf	___lldiv@divisor+3,w
   738  07C4  0277               	subwf	___lldiv@dividend+3,w
   739  07C5  1D03               	skipz
   740  07C6  2FD1               	goto	u185
   741  07C7  0872               	movf	___lldiv@divisor+2,w
   742  07C8  0276               	subwf	___lldiv@dividend+2,w
   743  07C9  1D03               	skipz
   744  07CA  2FD1               	goto	u185
   745  07CB  0871               	movf	___lldiv@divisor+1,w
   746  07CC  0275               	subwf	___lldiv@dividend+1,w
   747  07CD  1D03               	skipz
   748  07CE  2FD1               	goto	u185
   749  07CF  0870               	movf	___lldiv@divisor,w
   750  07D0  0274               	subwf	___lldiv@dividend,w
   751  07D1                     u185:
   752  07D1  1C03               	skipc
   753  07D2  2FD4               	goto	u181
   754  07D3  2FD5               	goto	u180
   755  07D4                     u181:
   756  07D4  2FE4               	goto	l779
   757  07D5                     u180:
   758  07D5                     l775:
   759  07D5  0870               	movf	___lldiv@divisor,w
   760  07D6  02F4               	subwf	___lldiv@dividend,f
   761  07D7  0871               	movf	___lldiv@divisor+1,w
   762  07D8  1C03               	skipc
   763  07D9  0F71               	incfsz	___lldiv@divisor+1,w
   764  07DA  02F5               	subwf	___lldiv@dividend+1,f
   765  07DB  0872               	movf	___lldiv@divisor+2,w
   766  07DC  1C03               	skipc
   767  07DD  0F72               	incfsz	___lldiv@divisor+2,w
   768  07DE  02F6               	subwf	___lldiv@dividend+2,f
   769  07DF  0873               	movf	___lldiv@divisor+3,w
   770  07E0  1C03               	skipc
   771  07E1  0F73               	incfsz	___lldiv@divisor+3,w
   772  07E2  02F7               	subwf	___lldiv@dividend+3,f
   773  07E3                     l777:
   774  07E3  1479               	bsf	___lldiv@quotient,0
   775  07E4                     l779:
   776  07E4  3001               	movlw	1
   777  07E5                     u195:
   778  07E5  1003               	clrc
   779  07E6  0CF3               	rrf	___lldiv@divisor+3,f
   780  07E7  0CF2               	rrf	___lldiv@divisor+2,f
   781  07E8  0CF1               	rrf	___lldiv@divisor+1,f
   782  07E9  0CF0               	rrf	___lldiv@divisor,f
   783  07EA  3EFF               	addlw	-1
   784  07EB  1D03               	skipz
   785  07EC  2FE5               	goto	u195
   786  07ED                     l781:
   787  07ED  3001               	movlw	1
   788  07EE  02FD               	subwf	___lldiv@counter,f
   789  07EF  1D03               	btfss	3,2
   790  07F0  2FF2               	goto	u201
   791  07F1  2FF3               	goto	u200
   792  07F2                     u201:
   793  07F2  2FBA               	goto	l771
   794  07F3                     u200:
   795  07F3                     l783:
   796  07F3  087C               	movf	___lldiv@quotient+3,w
   797  07F4  00F3               	movwf	?___lldiv+3
   798  07F5  087B               	movf	___lldiv@quotient+2,w
   799  07F6  00F2               	movwf	?___lldiv+2
   800  07F7  087A               	movf	___lldiv@quotient+1,w
   801  07F8  00F1               	movwf	?___lldiv+1
   802  07F9  0879               	movf	___lldiv@quotient,w
   803  07FA  00F0               	movwf	?___lldiv
   804  07FB                     l197:
   805  07FB  0008               	return
   806  07FC                     __end_of___lldiv:
   807                           
   808                           	psect	text4
   809  0708                     __ptext4:	
   810 ;; *************** function _Lcd_CmdWrite *****************
   811 ;; Defined at:
   812 ;;		line 17 in file "LCD.c"
   813 ;; Parameters:    Size  Location     Type
   814 ;;  cmd             1    wreg     unsigned char 
   815 ;; Auto vars:     Size  Location     Type
   816 ;;  cmd             1    2[COMMON] unsigned char 
   817 ;; Return value:  Size  Location     Type
   818 ;;                  1    wreg      void 
   819 ;; Registers used:
   820 ;;		wreg, status,2, status,0
   821 ;; Tracked objects:
   822 ;;		On entry : 0/0
   823 ;;		On exit  : 0/0
   824 ;;		Unchanged: 0/0
   825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   826 ;;      Params:         0       0       0       0       0
   827 ;;      Locals:         1       0       0       0       0
   828 ;;      Temps:          2       0       0       0       0
   829 ;;      Totals:         3       0       0       0       0
   830 ;;Total ram usage:        3 bytes
   831 ;; Hardware stack levels used: 1
   832 ;; This function calls:
   833 ;;		Nothing
   834 ;; This function is called by:
   835 ;;		_main
   836 ;; This function uses a non-reentrant model
   837 ;;
   838                           
   839                           
   840                           ;psect for function _Lcd_CmdWrite
   841  0708                     _Lcd_CmdWrite:
   842                           
   843                           ;incstack = 0
   844                           ; Regs used in _Lcd_CmdWrite: [wreg+status,2+status,0]
   845                           ;Lcd_CmdWrite@cmd stored from wreg
   846  0708  00F2               	movwf	Lcd_CmdWrite@cmd
   847  0709                     l691:
   848                           
   849                           ;LCD.c: 17: void Lcd_CmdWrite(char cmd);LCD.c: 18: {;LCD.c: 19:     PORTD = cmd;
   850  0709  0872               	movf	Lcd_CmdWrite@cmd,w
   851  070A  1283               	bcf	3,5	;RP0=0, select bank0
   852  070B  1303               	bcf	3,6	;RP1=0, select bank0
   853  070C  0088               	movwf	8	;volatile
   854  070D                     l693:
   855                           
   856                           ;LCD.c: 20:     PORTB &= ~(1<<0);
   857  070D  30FE               	movlw	254
   858  070E  00F0               	movwf	??_Lcd_CmdWrite
   859  070F  0870               	movf	??_Lcd_CmdWrite,w
   860  0710  0586               	andwf	6,f	;volatile
   861  0711                     l695:
   862                           
   863                           ;LCD.c: 21:     PORTB &= ~(1<<1);
   864  0711  30FD               	movlw	253
   865  0712  00F0               	movwf	??_Lcd_CmdWrite
   866  0713  0870               	movf	??_Lcd_CmdWrite,w
   867  0714  0586               	andwf	6,f	;volatile
   868  0715                     l697:
   869                           
   870                           ;LCD.c: 22:     PORTB |= (1<<2);
   871  0715  1506               	bsf	6,2	;volatile
   872                           
   873                           ;LCD.c: 23:     _delay((unsigned long)((100)*(20000000/4000000.0)));
   874  0716  30A6               	movlw	166
   875  0717  00F0               	movwf	??_Lcd_CmdWrite
   876  0718                     u227:
   877  0718  0BF0               	decfsz	??_Lcd_CmdWrite,f
   878  0719  2F18               	goto	u227
   879  071A  0000               	nop
   880  071B                     l699:
   881                           
   882                           ;LCD.c: 24:     PORTB &= ~(1<<2);
   883  071B  30FB               	movlw	251
   884  071C  00F0               	movwf	??_Lcd_CmdWrite
   885  071D  0870               	movf	??_Lcd_CmdWrite,w
   886  071E  1283               	bcf	3,5	;RP0=0, select bank0
   887  071F  1303               	bcf	3,6	;RP1=0, select bank0
   888  0720  0586               	andwf	6,f	;volatile
   889  0721                     l701:
   890                           
   891                           ;LCD.c: 26:     _delay((unsigned long)((10000)*(20000000/4000000.0)));
   892  0721  3041               	movlw	65
   893  0722  00F1               	movwf	??_Lcd_CmdWrite+1
   894  0723  30EE               	movlw	238
   895  0724  00F0               	movwf	??_Lcd_CmdWrite
   896  0725                     u237:
   897  0725  0BF0               	decfsz	??_Lcd_CmdWrite,f
   898  0726  2F25               	goto	u237
   899  0727  0BF1               	decfsz	??_Lcd_CmdWrite+1,f
   900  0728  2F25               	goto	u237
   901  0729  0000               	nop
   902  072A                     l31:
   903  072A  0008               	return
   904  072B                     __end_of_Lcd_CmdWrite:
   905  007E                     btemp	set	126	;btemp
   906  007E                     wtemp0	set	126
   907                           
   908                           	psect	config
   909                           
   910                           ;Config register CONFIG @ 0x2007
   911                           ;	Oscillator Selection bits
   912                           ;	FOSC = HS, HS oscillator
   913                           ;	Watchdog Timer Enable bit
   914                           ;	WDTE = OFF, WDT disabled
   915                           ;	Power-up Timer Enable bit
   916                           ;	PWRTE = OFF, PWRT disabled
   917                           ;	Brown-out Reset Enable bit
   918                           ;	BOREN = ON, BOR enabled
   919                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   920                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   921                           ;	Data EEPROM Memory Code Protection bit
   922                           ;	CPD = OFF, Data EEPROM code protection off
   923                           ;	Flash Program Memory Write Enable bits
   924                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   925                           ;	In-Circuit Debugger Mode bit
   926                           ;	DEBUG = 0x1, unprogrammed default
   927                           ;	Flash Program Memory Code Protection bit
   928                           ;	CP = OFF, Code protection off
   929  2007                     	org	8199
   930  2007  3FFA               	dw	16378

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      6       6
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _UART_Init->___lldiv

Critical Paths under _main in BANK0

    _main->_UART_Init

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     428
                       _Lcd_CmdWrite
                          _UART_Init
                        _UART_RxChar
 ---------------------------------------------------------------------------------
 (1) _UART_RxChar                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            6     4      2     412
                                              0 BANK0      6     4      2
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _Lcd_CmdWrite                                         3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_CmdWrite
   _UART_Init
     ___lldiv
   _UART_RxChar

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      6       6       5        7.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Nov 28 15:20:58 2021

                     l31 072A                       l55 0795                       l72 06FF  
                     l74 0705                       l75 0707                       u90 0705  
                     u91 0704                      l701 0721                      l197 07FB  
                    l801 0742                      l707 06FF                      l803 0748  
                    l709 0706                      l805 0753                      l807 0758  
                    l691 0709                      l771 07BA                      l763 0796  
                    l693 070D                      l781 07ED                      l773 07C3  
                    l765 07A6                      l695 0711                      l775 07D5  
                    l767 07A9                      l783 07F3                      l791 072B  
                    l697 0715                      l777 07E3                      l769 07B6  
                    l793 072E                      l699 071B                      l779 07E4  
                    l787 075F                      l795 0730                      l789 0769  
                    l797 0736                      l799 073C                      _RB7 0037  
                    u200 07F3                      u201 07F2                      u210 0778  
                    u140 07A6                      u141 07A5                      u215 0773  
                    u160 07BA                      u161 07B9                      u227 0718  
                    u155 07AB                      u180 07D5                      u237 0725  
                    u181 07D4                      u175 07BC                      u185 07D1  
                    u195 07E5                     _RCIF 0065                     _TRMT 04C1  
                   _TXIF 0064                     _main 072B                     btemp 007E  
   __end_of_Lcd_CmdWrite 072B                     start 0000                    ?_main 0070  
        __end_of___lldiv 07FC                    _RCREG 001A                    _RCSTA 0018  
                  _SPBRG 0099                    _PORTB 0006                    _PORTD 0008  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _TXREG 0019                    _TXSTA 0098       __size_of_UART_Init 0037  
                  status 0003                    wtemp0 007E          __initialization 07FC  
           __end_of_main 075F                   ??_main 007E                   _TRISB7 0437  
           ?_UART_RxChar 0070        __end_of_UART_Init 0796                ??___lldiv 0078  
  __size_of_Lcd_CmdWrite 0023  __end_of__initialization 07FC           __pcstackCOMMON 0070  
           _Lcd_CmdWrite 0708               __pmaintext 072B     __size_of_UART_RxChar 0009  
                ___lldiv 0796                  __ptext1 06FF                  __ptext2 075F  
                __ptext3 0796                  __ptext4 0708     end_of_initialization 07FC  
        ___lldiv@divisor 0070          ___lldiv@counter 007D                _UART_Init 075F  
             ?_UART_Init 0020      start_initialization 07FC                ___latbits 0002  
          __pcstackBANK0 0020                 ?___lldiv 0070              ??_UART_Init 0022  
          ??_UART_RxChar 0070        UART_Init@baudRate 0020          Lcd_CmdWrite@cmd 0072  
    __end_of_UART_RxChar 0708         __size_of___lldiv 0066            ?_Lcd_CmdWrite 0070  
          __size_of_main 0034           ??_Lcd_CmdWrite 0070         ___lldiv@dividend 0074  
            _UART_RxChar 06FF         ___lldiv@quotient 0079  
