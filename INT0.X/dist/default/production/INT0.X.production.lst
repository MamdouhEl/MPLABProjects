

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Oct 16 22:49:55 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	intentry,global,class=CODE,delta=2
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 2.20
    14                           ; Generated 12/02/2020 GMT
    15                           ; 
    16                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F877A Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  0007                     	;# 
    55  0008                     	;# 
    56  0009                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  000D                     	;# 
    61  000E                     	;# 
    62  000E                     	;# 
    63  000F                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0013                     	;# 
    68  0014                     	;# 
    69  0015                     	;# 
    70  0015                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001B                     	;# 
    77  001B                     	;# 
    78  001C                     	;# 
    79  001D                     	;# 
    80  001E                     	;# 
    81  001F                     	;# 
    82  0081                     	;# 
    83  0085                     	;# 
    84  0086                     	;# 
    85  0087                     	;# 
    86  0088                     	;# 
    87  0089                     	;# 
    88  008C                     	;# 
    89  008D                     	;# 
    90  008E                     	;# 
    91  0091                     	;# 
    92  0092                     	;# 
    93  0093                     	;# 
    94  0094                     	;# 
    95  0098                     	;# 
    96  0099                     	;# 
    97  009C                     	;# 
    98  009D                     	;# 
    99  009E                     	;# 
   100  009F                     	;# 
   101  010C                     	;# 
   102  010D                     	;# 
   103  010E                     	;# 
   104  010F                     	;# 
   105  018C                     	;# 
   106  018D                     	;# 
   107  0000                     	;# 
   108  0001                     	;# 
   109  0002                     	;# 
   110  0003                     	;# 
   111  0004                     	;# 
   112  0005                     	;# 
   113  0006                     	;# 
   114  0007                     	;# 
   115  0008                     	;# 
   116  0009                     	;# 
   117  000A                     	;# 
   118  000B                     	;# 
   119  000C                     	;# 
   120  000D                     	;# 
   121  000E                     	;# 
   122  000E                     	;# 
   123  000F                     	;# 
   124  0010                     	;# 
   125  0011                     	;# 
   126  0012                     	;# 
   127  0013                     	;# 
   128  0014                     	;# 
   129  0015                     	;# 
   130  0015                     	;# 
   131  0016                     	;# 
   132  0017                     	;# 
   133  0018                     	;# 
   134  0019                     	;# 
   135  001A                     	;# 
   136  001B                     	;# 
   137  001B                     	;# 
   138  001C                     	;# 
   139  001D                     	;# 
   140  001E                     	;# 
   141  001F                     	;# 
   142  0081                     	;# 
   143  0085                     	;# 
   144  0086                     	;# 
   145  0087                     	;# 
   146  0088                     	;# 
   147  0089                     	;# 
   148  008C                     	;# 
   149  008D                     	;# 
   150  008E                     	;# 
   151  0091                     	;# 
   152  0092                     	;# 
   153  0093                     	;# 
   154  0094                     	;# 
   155  0098                     	;# 
   156  0099                     	;# 
   157  009C                     	;# 
   158  009D                     	;# 
   159  009E                     	;# 
   160  009F                     	;# 
   161  010C                     	;# 
   162  010D                     	;# 
   163  010E                     	;# 
   164  010F                     	;# 
   165  018C                     	;# 
   166  018D                     	;# 
   167  0031                     _RB1	set	49
   168  005C                     _INTE	set	92
   169  005F                     _GIE	set	95
   170  0033                     _RB3	set	51
   171  0032                     _RB2	set	50
   172  0059                     _INTF	set	89
   173  0433                     _TRISB3	set	1075
   174  0432                     _TRISB2	set	1074
   175  0431                     _TRISB1	set	1073
   176  0430                     _TRISB0	set	1072
   177                           
   178                           	psect	cinit
   179  000F                     start_initialization:	
   180                           ; #config settings
   181                           
   182  000F                     __initialization:
   183  000F                     end_of_initialization:	
   184                           ;End of C runtime variable initialization code
   185                           
   186  000F                     __end_of__initialization:
   187  000F  0183               	clrf	3
   188  0010  120A  118A  2813   	ljmp	_main	;jump to C main() function
   189                           
   190                           	psect	cstackCOMMON
   191  0070                     __pcstackCOMMON:
   192  0070                     ?_ISR:
   193  0070                     ??_ISR:	
   194                           ; 1 bytes @ 0x0
   195                           
   196  0070                     ?_main:	
   197                           ; 1 bytes @ 0x0
   198                           
   199                           
   200                           ; 1 bytes @ 0x0
   201  0070                     	ds	5
   202  0075                     ??_main:
   203                           
   204                           ; 1 bytes @ 0x5
   205  0075                     	ds	2
   206                           
   207                           	psect	cstackBANK0
   208  0020                     __pcstackBANK0:
   209  0020                     main@count:
   210                           
   211                           ; 2 bytes @ 0x0
   212  0020                     	ds	2
   213  0022                     main@laststate:
   214                           
   215                           ; 2 bytes @ 0x2
   216  0022                     	ds	2
   217                           
   218                           	psect	maintext
   219  0013                     __pmaintext:	
   220 ;;
   221 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   222 ;;
   223 ;; *************** function _main *****************
   224 ;; Defined at:
   225 ;;		line 44 in file "newmain.c"
   226 ;; Parameters:    Size  Location     Type
   227 ;;		None
   228 ;; Auto vars:     Size  Location     Type
   229 ;;  laststate       2    2[BANK0 ] int 
   230 ;;  count           2    0[BANK0 ] int 
   231 ;; Return value:  Size  Location     Type
   232 ;;                  1    wreg      void 
   233 ;; Registers used:
   234 ;;		wreg, status,2, status,0
   235 ;; Tracked objects:
   236 ;;		On entry : B00/0
   237 ;;		On exit  : 0/0
   238 ;;		Unchanged: 0/0
   239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   240 ;;      Params:         0       0       0       0       0
   241 ;;      Locals:         0       4       0       0       0
   242 ;;      Temps:          2       0       0       0       0
   243 ;;      Totals:         2       4       0       0       0
   244 ;;Total ram usage:        6 bytes
   245 ;; Hardware stack levels required when called: 1
   246 ;; This function calls:
   247 ;;		Nothing
   248 ;; This function is called by:
   249 ;;		Startup code after reset
   250 ;; This function uses a non-reentrant model
   251 ;;
   252                           
   253                           
   254                           ;psect for function _main
   255  0013                     _main:
   256  0013                     l662:	
   257                           ;incstack = 0
   258                           ; Regs used in _main: [wreg+status,2+status,0]
   259                           
   260                           
   261                           ;newmain.c: 46:     TRISB0 = 1;
   262  0013  1683               	bsf	3,5	;RP0=1, select bank1
   263  0014  1303               	bcf	3,6	;RP1=0, select bank1
   264  0015  1406               	bsf	6,0	;volatile
   265                           
   266                           ;newmain.c: 47:     TRISB1 = 1;
   267  0016  1486               	bsf	6,1	;volatile
   268                           
   269                           ;newmain.c: 48:     TRISB2 = 0;
   270  0017  1106               	bcf	6,2	;volatile
   271                           
   272                           ;newmain.c: 49:     TRISB3 = 0;
   273  0018  1186               	bcf	6,3	;volatile
   274                           
   275                           ;newmain.c: 50:     GIE = 1;
   276  0019  178B               	bsf	11,7	;volatile
   277                           
   278                           ;newmain.c: 51:     INTE = 1;
   279  001A  160B               	bsf	11,4	;volatile
   280  001B                     l664:
   281                           
   282                           ;newmain.c: 53:     int count = 0;
   283  001B  1283               	bcf	3,5	;RP0=0, select bank0
   284  001C  1303               	bcf	3,6	;RP1=0, select bank0
   285  001D  01A0               	clrf	main@count
   286  001E  01A1               	clrf	main@count+1
   287                           
   288                           ;newmain.c: 54:     int laststate = 0;
   289  001F  01A2               	clrf	main@laststate
   290  0020  01A3               	clrf	main@laststate+1
   291  0021                     l666:
   292                           
   293                           ;newmain.c: 57:         if(RB1 != laststate){
   294  0021  1003               	clrc
   295  0022  1886               	btfsc	6,1	;volatile
   296  0023  1403               	setc
   297  0024  3000               	movlw	0
   298  0025  1803               	skipnc
   299  0026  3001               	movlw	1
   300  0027  00F5               	movwf	??_main
   301  0028  01F6               	clrf	??_main+1
   302  0029  0823               	movf	main@laststate+1,w
   303  002A  0676               	xorwf	??_main+1,w
   304  002B  1D03               	skipz
   305  002C  282F               	goto	u55
   306  002D  0822               	movf	main@laststate,w
   307  002E  0675               	xorwf	??_main,w
   308  002F                     u55:
   309  002F  1903               	skipnz
   310  0030  2832               	goto	u51
   311  0031  2833               	goto	u50
   312  0032                     u51:
   313  0032  2861               	goto	l676
   314  0033                     u50:
   315  0033                     l668:
   316                           
   317                           ;newmain.c: 58:             _delay((unsigned long)((30)*(8000000/4000.0)));
   318  0033  304E               	movlw	78
   319  0034  00F6               	movwf	??_main+1
   320  0035  30EB               	movlw	235
   321  0036  00F5               	movwf	??_main
   322  0037                     u87:
   323  0037  0BF5               	decfsz	??_main,f
   324  0038  2837               	goto	u87
   325  0039  0BF6               	decfsz	??_main+1,f
   326  003A  2837               	goto	u87
   327  003B                     l670:
   328                           
   329                           ;newmain.c: 59:             if(RB1 != laststate){
   330  003B  1003               	clrc
   331  003C  1283               	bcf	3,5	;RP0=0, select bank0
   332  003D  1303               	bcf	3,6	;RP1=0, select bank0
   333  003E  1886               	btfsc	6,1	;volatile
   334  003F  1403               	setc
   335  0040  3000               	movlw	0
   336  0041  1803               	skipnc
   337  0042  3001               	movlw	1
   338  0043  00F5               	movwf	??_main
   339  0044  01F6               	clrf	??_main+1
   340  0045  0823               	movf	main@laststate+1,w
   341  0046  0676               	xorwf	??_main+1,w
   342  0047  1D03               	skipz
   343  0048  284B               	goto	u65
   344  0049  0822               	movf	main@laststate,w
   345  004A  0675               	xorwf	??_main,w
   346  004B                     u65:
   347  004B  1903               	skipnz
   348  004C  284E               	goto	u61
   349  004D  284F               	goto	u60
   350  004E                     u61:
   351  004E  2861               	goto	l676
   352  004F                     u60:
   353  004F                     l672:
   354                           
   355                           ;newmain.c: 61:                 laststate = RB1;
   356  004F  1003               	clrc
   357  0050  1886               	btfsc	6,1	;volatile
   358  0051  1403               	setc
   359  0052  3000               	movlw	0
   360  0053  1803               	skipnc
   361  0054  3001               	movlw	1
   362  0055  00F5               	movwf	??_main
   363  0056  01F6               	clrf	??_main+1
   364  0057  0875               	movf	??_main,w
   365  0058  00A2               	movwf	main@laststate
   366  0059  0876               	movf	??_main+1,w
   367  005A  00A3               	movwf	main@laststate+1
   368  005B                     l674:
   369                           
   370                           ;newmain.c: 62:                 count++;
   371  005B  3001               	movlw	1
   372  005C  07A0               	addwf	main@count,f
   373  005D  1803               	skipnc
   374  005E  0AA1               	incf	main@count+1,f
   375  005F  3000               	movlw	0
   376  0060  07A1               	addwf	main@count+1,f
   377  0061                     l676:
   378                           
   379                           ;newmain.c: 68:         if(count % 2 == 0){
   380  0061  1820               	btfsc	main@count,0
   381  0062  2864               	goto	u71
   382  0063  2865               	goto	u70
   383  0064                     u71:
   384  0064  2868               	goto	l36
   385  0065                     u70:
   386  0065                     l678:
   387                           
   388                           ;newmain.c: 70:             RB2 = 1;
   389  0065  1506               	bsf	6,2	;volatile
   390                           
   391                           ;newmain.c: 71:             RB3 = 0;
   392  0066  1186               	bcf	6,3	;volatile
   393                           
   394                           ;newmain.c: 72:         }else{
   395  0067  2821               	goto	l666
   396  0068                     l36:
   397                           
   398                           ;newmain.c: 74:             RB2 = 0;
   399  0068  1106               	bcf	6,2	;volatile
   400                           
   401                           ;newmain.c: 75:             RB3 = 1;
   402  0069  1586               	bsf	6,3	;volatile
   403  006A  2821               	goto	l666
   404  006B  120A  118A  280C   	ljmp	start
   405  006E                     __end_of_main:
   406                           
   407                           	psect	text1
   408  006E                     __ptext1:	
   409 ;; *************** function _ISR *****************
   410 ;; Defined at:
   411 ;;		line 29 in file "newmain.c"
   412 ;; Parameters:    Size  Location     Type
   413 ;;		None
   414 ;; Auto vars:     Size  Location     Type
   415 ;;		None
   416 ;; Return value:  Size  Location     Type
   417 ;;                  1    wreg      void 
   418 ;; Registers used:
   419 ;;		wreg
   420 ;; Tracked objects:
   421 ;;		On entry : 0/0
   422 ;;		On exit  : 0/0
   423 ;;		Unchanged: 0/0
   424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   425 ;;      Params:         0       0       0       0       0
   426 ;;      Locals:         0       0       0       0       0
   427 ;;      Temps:          5       0       0       0       0
   428 ;;      Totals:         5       0       0       0       0
   429 ;;Total ram usage:        5 bytes
   430 ;; Hardware stack levels used: 1
   431 ;; This function calls:
   432 ;;		Nothing
   433 ;; This function is called by:
   434 ;;		Interrupt level 1
   435 ;; This function uses a non-reentrant model
   436 ;;
   437                           
   438                           
   439                           ;psect for function _ISR
   440  006E                     _ISR:
   441  006E                     i1l632:
   442                           
   443                           ;newmain.c: 31:         if (INTF==1)
   444  006E  1C8B               	btfss	11,1	;volatile
   445  006F  2871               	goto	u1_21
   446  0070  2872               	goto	u1_20
   447  0071                     u1_21:
   448  0071  2888               	goto	i1l28
   449  0072                     u1_20:
   450  0072                     i1l634:
   451                           
   452                           ;newmain.c: 32:         {;newmain.c: 33:             RB2 = 1;
   453  0072  1283               	bcf	3,5	;RP0=0, select bank0
   454  0073  1303               	bcf	3,6	;RP1=0, select bank0
   455  0074  1506               	bsf	6,2	;volatile
   456                           
   457                           ;newmain.c: 34:             RB3 = 1;
   458  0075  1586               	bsf	6,3	;volatile
   459  0076                     i1l636:
   460                           
   461                           ;newmain.c: 35:             _delay((unsigned long)((2000)*(8000000/4000.0)));
   462  0076  3015               	movlw	21
   463  0077  00F2               	movwf	??_ISR+2
   464  0078  304B               	movlw	75
   465  0079  00F1               	movwf	??_ISR+1
   466  007A  30BE               	movlw	190
   467  007B  00F0               	movwf	??_ISR
   468  007C                     u9_27:
   469  007C  0BF0               	decfsz	??_ISR,f
   470  007D  287C               	goto	u9_27
   471  007E  0BF1               	decfsz	??_ISR+1,f
   472  007F  287C               	goto	u9_27
   473  0080  0BF2               	decfsz	??_ISR+2,f
   474  0081  287C               	goto	u9_27
   475  0082  0000               	nop
   476  0083                     i1l638:
   477                           
   478                           ;newmain.c: 36:             RB2 = 0;
   479  0083  1283               	bcf	3,5	;RP0=0, select bank0
   480  0084  1303               	bcf	3,6	;RP1=0, select bank0
   481  0085  1106               	bcf	6,2	;volatile
   482  0086                     i1l640:
   483                           
   484                           ;newmain.c: 37:             RB3 = 0;
   485  0086  1186               	bcf	6,3	;volatile
   486  0087                     i1l642:
   487                           
   488                           ;newmain.c: 38:             INTF = 0;
   489  0087  108B               	bcf	11,1	;volatile
   490  0088                     i1l28:
   491  0088  0874               	movf	??_ISR+4,w
   492  0089  008A               	movwf	10
   493  008A  0E73               	swapf	??_ISR+3,w
   494  008B  0083               	movwf	3
   495  008C  0EFE               	swapf	btemp,f
   496  008D  0E7E               	swapf	btemp,w
   497  008E  0009               	retfie
   498  008F                     __end_of_ISR:
   499  007E                     btemp	set	126	;btemp
   500  007E                     wtemp0	set	126
   501                           
   502                           	psect	intentry
   503  0004                     __pintentry:	
   504                           ;incstack = 0
   505                           ; Regs used in _ISR: [wreg]
   506                           
   507  0004                     interrupt_function:
   508  007E                     saved_w	set	btemp
   509  0004  00FE               	movwf	btemp
   510  0005  0E03               	swapf	3,w
   511  0006  00F3               	movwf	??_ISR+3
   512  0007  080A               	movf	10,w
   513  0008  00F4               	movwf	??_ISR+4
   514  0009  120A  118A  286E   	ljmp	_ISR
   515                           
   516                           	psect	config
   517                           
   518                           ;Config register CONFIG @ 0x2007
   519                           ;	Oscillator Selection bits
   520                           ;	FOSC = HS, HS oscillator
   521                           ;	Watchdog Timer Enable bit
   522                           ;	WDTE = ON, WDT enabled
   523                           ;	Power-up Timer Enable bit
   524                           ;	PWRTE = OFF, PWRT disabled
   525                           ;	Brown-out Reset Enable bit
   526                           ;	BOREN = ON, BOR enabled
   527                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   528                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   529                           ;	Data EEPROM Memory Code Protection bit
   530                           ;	CPD = OFF, Data EEPROM code protection off
   531                           ;	Flash Program Memory Write Enable bits
   532                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   533                           ;	In-Circuit Debugger Mode bit
   534                           ;	DEBUG = 0x1, unprogrammed default
   535                           ;	Flash Program Memory Code Protection bit
   536                           ;	CP = OFF, Code protection off
   537  2007                     	org	8199
   538  2007  3F7E               	dw	16254

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       7
    BANK0            80      4       4
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0      70
                                              5 COMMON     2     2      0
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _ISR                                                  5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      4       4       5        5.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Oct 16 22:49:55 2021

                     l36 0068                       u50 0033                       u51 0032  
                     u60 004F                       u61 004E                       u70 0065  
                     u71 0064                       u55 002F                       u65 004B  
                     u87 0037                      l670 003B                      l662 0013  
                    l672 004F                      l664 001B                      l674 005B  
                    l666 0021                      l668 0033                      l676 0061  
                    l678 0065                      _GIE 005F                      _RB1 0031  
                    _RB2 0032                      _RB3 0033                      _ISR 006E  
                   ?_ISR 0070                     _INTE 005C                     _INTF 0059  
                   i1l28 0088                     u1_20 0072                     u1_21 0071  
                   u9_27 007C                     _main 0013                     btemp 007E  
                   start 000C                    ??_ISR 0070                    ?_main 0070  
                  i1l640 0086                    i1l632 006E                    i1l642 0087  
                  i1l634 0072                    i1l636 0076                    i1l638 0083  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 006E                   ??_main 0075  
                 _TRISB0 0430                   _TRISB1 0431                   _TRISB2 0432  
                 _TRISB3 0433            main@laststate 0022                   saved_w 007E  
__end_of__initialization 000F           __pcstackCOMMON 0070               __pmaintext 0013  
             __pintentry 0004                  __ptext1 006E             __size_of_ISR 0021  
   end_of_initialization 000F      start_initialization 000F              __end_of_ISR 008F  
              ___latbits 0002            __pcstackBANK0 0020        interrupt_function 0004  
              main@count 0020            __size_of_main 005B                 intlevel1 0000  
